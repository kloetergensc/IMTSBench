# Size of variable arrays:
sizeAlgebraic = 296
sizeStates = 80
sizeConstants = 770
from math import *
from numpy import *

def createLegends():
    legend_states = [""] * sizeStates
    legend_rates = [""] * sizeStates
    legend_algebraic = [""] * sizeAlgebraic
    legend_voi = ""
    legend_constants = [""] * sizeConstants
    legend_voi = "time in component environment (second)"
    legend_algebraic[7] = "I_CaT in component I_CaT (picoampere)"
    legend_constants[0] = "g_CaT in component I_CaT (picosiemens)"
    legend_constants[1] = "ECaT in component I_CaT (millivolt)"
    legend_constants[2] = "alpha_OT in component I_CaT (first_order_rate_constant)"
    legend_constants[3] = "beta_OT in component I_CaT (first_order_rate_constant)"
    legend_states[0] = "OCaT in component I_CaT (dimensionless)"
    legend_states[1] = "Vm in component membrane (millivolt)"
    legend_states[2] = "dT in component I_CaT_d_gate (dimensionless)"
    legend_states[3] = "fT in component I_CaT_f_gate (dimensionless)"
    legend_algebraic[0] = "infinity_dT in component I_CaT_d_gate (dimensionless)"
    legend_constants[687] = "tau_dT1 in component I_CaT_d_gate (second)"
    legend_constants[4] = "A_dT1 in component I_CaT_d_gate (second)"
    legend_constants[5] = "k_dT in component I_CaT_d_gate (per_millivolt)"
    legend_constants[6] = "V_dT in component I_CaT_d_gate (millivolt)"
    legend_algebraic[1] = "infinity_fT in component I_CaT_f_gate (dimensionless)"
    legend_algebraic[19] = "tau_fT1 in component I_CaT_f_gate (second)"
    legend_constants[7] = "A_fT1 in component I_CaT_f_gate (second)"
    legend_constants[8] = "A_fT2 in component I_CaT_f_gate (second)"
    legend_constants[9] = "A_fT3 in component I_CaT_f_gate (per_millivolt)"
    legend_constants[10] = "A_fT4 in component I_CaT_f_gate (millivolt)"
    legend_constants[11] = "k_fT in component I_CaT_f_gate (per_millivolt)"
    legend_constants[12] = "V_fT in component I_CaT_f_gate (millivolt)"
    legend_algebraic[25] = "I_CaExt in component I_CaExt (picoampere)"
    legend_constants[13] = "gCaExt in component I_CaExt (femtoampere)"
    legend_constants[14] = "KCaExt in component I_CaExt (micromolar)"
    legend_states[4] = "CCy in component CCy (micromolar)"
    legend_algebraic[29] = "I_Kv1_1 in component I_Kv1_1 (picoampere)"
    legend_constants[15] = "g_Kv1_1 in component I_Kv1_1 (picosiemens)"
    legend_constants[688] = "EK in component Nerst_potentials (millivolt)"
    legend_states[5] = "dv1_1 in component I_Kv1_1_d_gate (dimensionless)"
    legend_states[6] = "fv1_1 in component I_Kv1_1_f_gate (dimensionless)"
    legend_algebraic[20] = "alpha_dv1_1 in component I_Kv1_1_d_gate (first_order_rate_constant)"
    legend_algebraic[2] = "A_dv1_11 in component I_Kv1_1_d_gate (first_order_rate_constant)"
    legend_constants[16] = "A_dv1_11a in component I_Kv1_1_d_gate (first_order_rate_constant)"
    legend_constants[17] = "A_dv1_11b in component I_Kv1_1_d_gate (first_order_rate_constant)"
    legend_constants[18] = "A_dv1_11c in component I_Kv1_1_d_gate (per_millivolt)"
    legend_constants[19] = "A_dv1_11d in component I_Kv1_1_d_gate (millivolt)"
    legend_constants[20] = "A_dv1_12 in component I_Kv1_1_d_gate (dimensionless)"
    legend_constants[21] = "A_dv1_13 in component I_Kv1_1_d_gate (per_millivolt)"
    legend_constants[22] = "A_dv1_14 in component I_Kv1_1_d_gate (millivolt)"
    legend_algebraic[26] = "beta_dv1_1 in component I_Kv1_1_d_gate (first_order_rate_constant)"
    legend_algebraic[3] = "alpha_fv1_1 in component I_Kv1_1_f_gate (first_order_rate_constant)"
    legend_constants[23] = "A_fv1_11 in component I_Kv1_1_f_gate (first_order_rate_constant)"
    legend_constants[24] = "A_fv1_12 in component I_Kv1_1_f_gate (dimensionless)"
    legend_constants[25] = "A_fv1_13 in component I_Kv1_1_f_gate (per_millivolt)"
    legend_constants[26] = "A_fv1_14 in component I_Kv1_1_f_gate (millivolt)"
    legend_algebraic[21] = "beta_fv1_1 in component I_Kv1_1_f_gate (first_order_rate_constant)"
    legend_algebraic[30] = "I_KERG in component I_KERG (picoampere)"
    legend_constants[27] = "g_KERG in component I_KERG (picosiemens)"
    legend_states[7] = "dERG in component I_KERG_d_gate (dimensionless)"
    legend_algebraic[4] = "alpha_dERG in component I_KERG_d_gate (first_order_rate_constant)"
    legend_constants[28] = "A_dERG1 in component I_KERG_d_gate (first_order_rate_constant)"
    legend_constants[29] = "A_dERG2 in component I_KERG_d_gate (dimensionless)"
    legend_constants[30] = "A_dERG3 in component I_KERG_d_gate (per_millivolt)"
    legend_constants[31] = "A_dERG4 in component I_KERG_d_gate (millivolt)"
    legend_algebraic[22] = "beta_dERG in component I_KERG_d_gate (first_order_rate_constant)"
    legend_algebraic[31] = "I_KB in component I_KB (picoampere)"
    legend_constants[32] = "g_KB in component I_KB (picosiemens)"
    legend_algebraic[32] = "I_Na in component I_Na (picoampere)"
    legend_constants[33] = "g_Na in component I_Na (picosiemens)"
    legend_constants[689] = "ENa_Cy in component Nerst_potentials (millivolt)"
    legend_states[8] = "dNa in component I_Na_d_gate (dimensionless)"
    legend_states[9] = "fNa in component I_Na_f_gate (dimensionless)"
    legend_algebraic[23] = "alpha_dNa in component I_Na_d_gate (first_order_rate_constant)"
    legend_algebraic[5] = "A_dNa1 in component I_Na_d_gate (first_order_rate_constant)"
    legend_constants[34] = "A_dNa1a in component I_Na_d_gate (first_order_rate_constant)"
    legend_constants[35] = "A_dNa1b in component I_Na_d_gate (first_order_rate_constant)"
    legend_constants[36] = "A_dNa1c in component I_Na_d_gate (per_millivolt)"
    legend_constants[37] = "A_dNa1d in component I_Na_d_gate (millivolt)"
    legend_constants[38] = "A_dNa2 in component I_Na_d_gate (dimensionless)"
    legend_constants[39] = "A_dNa3 in component I_Na_d_gate (per_millivolt)"
    legend_constants[40] = "A_dNa4 in component I_Na_d_gate (millivolt)"
    legend_algebraic[27] = "beta_dNa in component I_Na_d_gate (first_order_rate_constant)"
    legend_algebraic[24] = "alpha_fNa in component I_Na_f_gate (first_order_rate_constant)"
    legend_algebraic[6] = "A_fNa1 in component I_Na_f_gate (first_order_rate_constant)"
    legend_constants[41] = "A_fNa1a in component I_Na_f_gate (first_order_rate_constant)"
    legend_constants[42] = "A_fNa1b in component I_Na_f_gate (first_order_rate_constant)"
    legend_constants[43] = "A_fNa1c in component I_Na_f_gate (per_millivolt)"
    legend_constants[44] = "A_fNa1d in component I_Na_f_gate (millivolt)"
    legend_constants[45] = "A_fNa2 in component I_Na_f_gate (dimensionless)"
    legend_constants[46] = "A_fNa3 in component I_Na_f_gate (per_millivolt)"
    legend_constants[47] = "A_fNa4 in component I_Na_f_gate (millivolt)"
    legend_algebraic[28] = "beta_fNa in component I_Na_f_gate (first_order_rate_constant)"
    legend_algebraic[33] = "I_L in component I_L (picoampere)"
    legend_constants[48] = "g_L in component I_L (picosiemens)"
    legend_constants[49] = "EL in component I_L (millivolt)"
    legend_algebraic[34] = "I_ion_Cy in component membrane (picoampere)"
    legend_constants[50] = "Cm in component membrane (picofarad)"
    legend_algebraic[72] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[96] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[120] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[144] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[168] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[192] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[216] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[240] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[264] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[287] = "I_ion_PU in component PU_membrane (picoampere)"
    legend_algebraic[8] = "ECa_Cy in component Nerst_potentials (millivolt)"
    legend_constants[51] = "T in component model_parameters (kelvin)"
    legend_constants[52] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[53] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[54] = "CO in component model_parameters (micromolar)"
    legend_constants[55] = "KO in component model_parameters (micromolar)"
    legend_constants[56] = "Ki in component model_parameters (micromolar)"
    legend_constants[57] = "NO in component model_parameters (micromolar)"
    legend_constants[58] = "Ni in component model_parameters (micromolar)"
    legend_constants[59] = "lambda_S2_Cy in component CCy (dimensionless)"
    legend_constants[60] = "delta_SCy in component CCy (micromolar_per_coulomb)"
    legend_algebraic[45] = "JCy in component JCy (flux)"
    legend_algebraic[35] = "JS2Cy1 in component JS2Cy (flux)"
    legend_algebraic[36] = "JS2Cy2 in component JS2Cy (flux)"
    legend_algebraic[37] = "JS2Cy3 in component JS2Cy (flux)"
    legend_algebraic[38] = "JS2Cy4 in component JS2Cy (flux)"
    legend_algebraic[39] = "JS2Cy5 in component JS2Cy (flux)"
    legend_algebraic[40] = "JS2Cy6 in component JS2Cy (flux)"
    legend_algebraic[41] = "JS2Cy7 in component JS2Cy (flux)"
    legend_algebraic[42] = "JS2Cy8 in component JS2Cy (flux)"
    legend_algebraic[43] = "JS2Cy9 in component JS2Cy (flux)"
    legend_algebraic[44] = "JS2Cy10 in component JS2Cy (flux)"
    legend_constants[61] = "mu_S2Cy1 in component JS2Cy (first_order_rate_constant)"
    legend_constants[62] = "mu_S2Cy2 in component JS2Cy (first_order_rate_constant)"
    legend_constants[63] = "mu_S2Cy3 in component JS2Cy (first_order_rate_constant)"
    legend_constants[64] = "mu_S2Cy4 in component JS2Cy (first_order_rate_constant)"
    legend_constants[65] = "mu_S2Cy5 in component JS2Cy (first_order_rate_constant)"
    legend_constants[66] = "mu_S2Cy6 in component JS2Cy (first_order_rate_constant)"
    legend_constants[67] = "mu_S2Cy7 in component JS2Cy (first_order_rate_constant)"
    legend_constants[68] = "mu_S2Cy8 in component JS2Cy (first_order_rate_constant)"
    legend_constants[69] = "mu_S2Cy9 in component JS2Cy (first_order_rate_constant)"
    legend_constants[70] = "mu_S2Cy10 in component JS2Cy (first_order_rate_constant)"
    legend_states[10] = "CS2 in component CS2 (micromolar)"
    legend_states[11] = "CS2 in component CS2 (micromolar)"
    legend_states[12] = "CS2 in component CS2 (micromolar)"
    legend_states[13] = "CS2 in component CS2 (micromolar)"
    legend_states[14] = "CS2 in component CS2 (micromolar)"
    legend_states[15] = "CS2 in component CS2 (micromolar)"
    legend_states[16] = "CS2 in component CS2 (micromolar)"
    legend_states[17] = "CS2 in component CS2 (micromolar)"
    legend_states[18] = "CS2 in component CS2 (micromolar)"
    legend_states[19] = "CS2 in component CS2 (micromolar)"
    legend_algebraic[46] = "JS1S2_1 in component JS1S2 (flux)"
    legend_algebraic[47] = "JS1S2_2 in component JS1S2 (flux)"
    legend_algebraic[48] = "JS1S2_3 in component JS1S2 (flux)"
    legend_algebraic[49] = "JS1S2_4 in component JS1S2 (flux)"
    legend_algebraic[50] = "JS1S2_5 in component JS1S2 (flux)"
    legend_algebraic[51] = "JS1S2_6 in component JS1S2 (flux)"
    legend_algebraic[52] = "JS1S2_7 in component JS1S2 (flux)"
    legend_algebraic[53] = "JS1S2_8 in component JS1S2 (flux)"
    legend_algebraic[54] = "JS1S2_9 in component JS1S2 (flux)"
    legend_algebraic[55] = "JS1S2_10 in component JS1S2 (flux)"
    legend_constants[691] = "mu_S1S2_1 in component JS1S2 (first_order_rate_constant)"
    legend_constants[692] = "mu_S1S2_2 in component JS1S2 (first_order_rate_constant)"
    legend_constants[693] = "mu_S1S2_3 in component JS1S2 (first_order_rate_constant)"
    legend_constants[694] = "mu_S1S2_4 in component JS1S2 (first_order_rate_constant)"
    legend_constants[695] = "mu_S1S2_5 in component JS1S2 (first_order_rate_constant)"
    legend_constants[696] = "mu_S1S2_6 in component JS1S2 (first_order_rate_constant)"
    legend_constants[697] = "mu_S1S2_7 in component JS1S2 (first_order_rate_constant)"
    legend_constants[698] = "mu_S1S2_8 in component JS1S2 (first_order_rate_constant)"
    legend_constants[699] = "mu_S1S2_9 in component JS1S2 (first_order_rate_constant)"
    legend_constants[700] = "mu_S1S2_10 in component JS1S2 (first_order_rate_constant)"
    legend_constants[71] = "mu_A in component JS1S2 (first_order_rate_constant)"
    legend_constants[72] = "mu_B in component JS1S2 (first_order_rate_constant)"
    legend_constants[73] = "n_PU in component model_parameters (dimensionless)"
    legend_states[20] = "CS1 in component CS1 (micromolar)"
    legend_states[21] = "CS1 in component CS1 (micromolar)"
    legend_states[22] = "CS1 in component CS1 (micromolar)"
    legend_states[23] = "CS1 in component CS1 (micromolar)"
    legend_states[24] = "CS1 in component CS1 (micromolar)"
    legend_states[25] = "CS1 in component CS1 (micromolar)"
    legend_states[26] = "CS1 in component CS1 (micromolar)"
    legend_states[27] = "CS1 in component CS1 (micromolar)"
    legend_states[28] = "CS1 in component CS1 (micromolar)"
    legend_states[29] = "CS1 in component CS1 (micromolar)"
    legend_constants[74] = "mu_Cy in component JCy (first_order_rate_constant)"
    legend_constants[75] = "C_infinity in component JCy (micromolar)"
    legend_constants[76] = "P in component model_parameters (micromolar)"
    legend_algebraic[66] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[70] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[715] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[58] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[60] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[68] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[62] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[65] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[64] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[77] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[78] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[79] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[80] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[56] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[57] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[81] = "T in component model_parameters (kelvin)"
    legend_constants[82] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[83] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[84] = "CO in component model_parameters (micromolar)"
    legend_constants[85] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[59] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[86] = "NO in component model_parameters (micromolar)"
    legend_states[30] = "NS1 in component NS1 (micromolar)"
    legend_constants[87] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[61] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[88] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[89] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[90] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[91] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[63] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[92] = "gPM in component I_PM (femtoampere)"
    legend_constants[93] = "KPM in component I_PM (micromolar)"
    legend_constants[94] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[95] = "KNaP in component I_NaP (micromolar)"
    legend_constants[96] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[97] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[67] = "JSERCA in component JSERCA (flux)"
    legend_constants[98] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[99] = "A2 in component JSERCA (dimensionless)"
    legend_constants[100] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[101] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[102] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[31] = "CER in component CER (micromolar)"
    legend_algebraic[71] = "JMCU in component JMCU (flux)"
    legend_constants[103] = "VMCU in component JMCU (flux)"
    legend_constants[104] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[69] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[105] = "KINH in component JMCU (micromolar)"
    legend_constants[106] = "hINH in component JMCU (dimensionless)"
    legend_states[32] = "CMT in component CMT (micromolar)"
    legend_algebraic[79] = "JIPR in component JIPR (flux)"
    legend_constants[107] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[108] = "k_1 in component JIPR (flux)"
    legend_constants[109] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[110] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[111] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[112] = "r_2 in component JIPR (flux)"
    legend_constants[113] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[114] = "R1 in component JIPR (micromolar)"
    legend_constants[115] = "R3 in component JIPR (micromolar)"
    legend_algebraic[73] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[76] = "phi_1 in component JIPR (flux)"
    legend_algebraic[80] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[82] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[33] = "H in component JIPR (dimensionless)"
    legend_constants[116] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[117] = "h_beta in component JIPR (dimensionless)"
    legend_constants[118] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[119] = "K_beta in component JIPR (micromolar)"
    legend_constants[701] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[9] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[34] = "zeta in component JIPR (dimensionless)"
    legend_constants[120] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[121] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[122] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[123] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[124] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[125] = "P in component model_parameters (micromolar)"
    legend_algebraic[74] = "JNCX in component JNCX (flux)"
    legend_constants[126] = "VNCX in component JNCX (flux)"
    legend_constants[127] = "KNCX in component JNCX (micromolar)"
    legend_constants[690] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[711] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[128] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[129] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[130] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[131] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[712] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[713] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[714] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[132] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[77] = "fm in component CMT (dimensionless)"
    legend_constants[133] = "Km in component CMT (micromolar)"
    legend_constants[134] = "Bm in component CMT (micromolar)"
    legend_constants[135] = "KO in component model_parameters (micromolar)"
    legend_constants[136] = "Ki in component model_parameters (micromolar)"
    legend_constants[137] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[90] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[94] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[721] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[81] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[84] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[92] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[86] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[89] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[88] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[138] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[139] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[140] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[141] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[75] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[78] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[142] = "T in component model_parameters (kelvin)"
    legend_constants[143] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[144] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[145] = "CO in component model_parameters (micromolar)"
    legend_constants[146] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[83] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[147] = "NO in component model_parameters (micromolar)"
    legend_states[35] = "NS1 in component NS1 (micromolar)"
    legend_constants[148] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[85] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[149] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[150] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[151] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[152] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[87] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[153] = "gPM in component I_PM (femtoampere)"
    legend_constants[154] = "KPM in component I_PM (micromolar)"
    legend_constants[155] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[156] = "KNaP in component I_NaP (micromolar)"
    legend_constants[157] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[158] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[91] = "JSERCA in component JSERCA (flux)"
    legend_constants[159] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[160] = "A2 in component JSERCA (dimensionless)"
    legend_constants[161] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[162] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[163] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[36] = "CER in component CER (micromolar)"
    legend_algebraic[95] = "JMCU in component JMCU (flux)"
    legend_constants[164] = "VMCU in component JMCU (flux)"
    legend_constants[165] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[93] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[166] = "KINH in component JMCU (micromolar)"
    legend_constants[167] = "hINH in component JMCU (dimensionless)"
    legend_states[37] = "CMT in component CMT (micromolar)"
    legend_algebraic[103] = "JIPR in component JIPR (flux)"
    legend_constants[168] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[169] = "k_1 in component JIPR (flux)"
    legend_constants[170] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[171] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[172] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[173] = "r_2 in component JIPR (flux)"
    legend_constants[174] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[175] = "R1 in component JIPR (micromolar)"
    legend_constants[176] = "R3 in component JIPR (micromolar)"
    legend_algebraic[97] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[100] = "phi_1 in component JIPR (flux)"
    legend_algebraic[104] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[106] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[38] = "H in component JIPR (dimensionless)"
    legend_constants[177] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[178] = "h_beta in component JIPR (dimensionless)"
    legend_constants[179] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[180] = "K_beta in component JIPR (micromolar)"
    legend_constants[702] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[10] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[39] = "zeta in component JIPR (dimensionless)"
    legend_constants[181] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[182] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[183] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[184] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[185] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[186] = "P in component model_parameters (micromolar)"
    legend_algebraic[98] = "JNCX in component JNCX (flux)"
    legend_constants[187] = "VNCX in component JNCX (flux)"
    legend_constants[188] = "KNCX in component JNCX (micromolar)"
    legend_constants[716] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[717] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[189] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[190] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[191] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[192] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[718] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[719] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[720] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[193] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[101] = "fm in component CMT (dimensionless)"
    legend_constants[194] = "Km in component CMT (micromolar)"
    legend_constants[195] = "Bm in component CMT (micromolar)"
    legend_constants[196] = "KO in component model_parameters (micromolar)"
    legend_constants[197] = "Ki in component model_parameters (micromolar)"
    legend_constants[198] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[114] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[118] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[727] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[105] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[108] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[116] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[110] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[113] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[112] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[199] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[200] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[201] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[202] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[99] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[102] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[203] = "T in component model_parameters (kelvin)"
    legend_constants[204] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[205] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[206] = "CO in component model_parameters (micromolar)"
    legend_constants[207] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[107] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[208] = "NO in component model_parameters (micromolar)"
    legend_states[40] = "NS1 in component NS1 (micromolar)"
    legend_constants[209] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[109] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[210] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[211] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[212] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[213] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[111] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[214] = "gPM in component I_PM (femtoampere)"
    legend_constants[215] = "KPM in component I_PM (micromolar)"
    legend_constants[216] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[217] = "KNaP in component I_NaP (micromolar)"
    legend_constants[218] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[219] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[115] = "JSERCA in component JSERCA (flux)"
    legend_constants[220] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[221] = "A2 in component JSERCA (dimensionless)"
    legend_constants[222] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[223] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[224] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[41] = "CER in component CER (micromolar)"
    legend_algebraic[119] = "JMCU in component JMCU (flux)"
    legend_constants[225] = "VMCU in component JMCU (flux)"
    legend_constants[226] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[117] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[227] = "KINH in component JMCU (micromolar)"
    legend_constants[228] = "hINH in component JMCU (dimensionless)"
    legend_states[42] = "CMT in component CMT (micromolar)"
    legend_algebraic[127] = "JIPR in component JIPR (flux)"
    legend_constants[229] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[230] = "k_1 in component JIPR (flux)"
    legend_constants[231] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[232] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[233] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[234] = "r_2 in component JIPR (flux)"
    legend_constants[235] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[236] = "R1 in component JIPR (micromolar)"
    legend_constants[237] = "R3 in component JIPR (micromolar)"
    legend_algebraic[121] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[124] = "phi_1 in component JIPR (flux)"
    legend_algebraic[128] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[130] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[43] = "H in component JIPR (dimensionless)"
    legend_constants[238] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[239] = "h_beta in component JIPR (dimensionless)"
    legend_constants[240] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[241] = "K_beta in component JIPR (micromolar)"
    legend_constants[703] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[11] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[44] = "zeta in component JIPR (dimensionless)"
    legend_constants[242] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[243] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[244] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[245] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[246] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[247] = "P in component model_parameters (micromolar)"
    legend_algebraic[122] = "JNCX in component JNCX (flux)"
    legend_constants[248] = "VNCX in component JNCX (flux)"
    legend_constants[249] = "KNCX in component JNCX (micromolar)"
    legend_constants[722] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[723] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[250] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[251] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[252] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[253] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[724] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[725] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[726] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[254] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[125] = "fm in component CMT (dimensionless)"
    legend_constants[255] = "Km in component CMT (micromolar)"
    legend_constants[256] = "Bm in component CMT (micromolar)"
    legend_constants[257] = "KO in component model_parameters (micromolar)"
    legend_constants[258] = "Ki in component model_parameters (micromolar)"
    legend_constants[259] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[138] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[142] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[733] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[129] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[132] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[140] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[134] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[137] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[136] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[260] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[261] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[262] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[263] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[123] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[126] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[264] = "T in component model_parameters (kelvin)"
    legend_constants[265] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[266] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[267] = "CO in component model_parameters (micromolar)"
    legend_constants[268] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[131] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[269] = "NO in component model_parameters (micromolar)"
    legend_states[45] = "NS1 in component NS1 (micromolar)"
    legend_constants[270] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[133] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[271] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[272] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[273] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[274] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[135] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[275] = "gPM in component I_PM (femtoampere)"
    legend_constants[276] = "KPM in component I_PM (micromolar)"
    legend_constants[277] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[278] = "KNaP in component I_NaP (micromolar)"
    legend_constants[279] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[280] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[139] = "JSERCA in component JSERCA (flux)"
    legend_constants[281] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[282] = "A2 in component JSERCA (dimensionless)"
    legend_constants[283] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[284] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[285] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[46] = "CER in component CER (micromolar)"
    legend_algebraic[143] = "JMCU in component JMCU (flux)"
    legend_constants[286] = "VMCU in component JMCU (flux)"
    legend_constants[287] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[141] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[288] = "KINH in component JMCU (micromolar)"
    legend_constants[289] = "hINH in component JMCU (dimensionless)"
    legend_states[47] = "CMT in component CMT (micromolar)"
    legend_algebraic[151] = "JIPR in component JIPR (flux)"
    legend_constants[290] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[291] = "k_1 in component JIPR (flux)"
    legend_constants[292] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[293] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[294] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[295] = "r_2 in component JIPR (flux)"
    legend_constants[296] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[297] = "R1 in component JIPR (micromolar)"
    legend_constants[298] = "R3 in component JIPR (micromolar)"
    legend_algebraic[145] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[148] = "phi_1 in component JIPR (flux)"
    legend_algebraic[152] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[154] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[48] = "H in component JIPR (dimensionless)"
    legend_constants[299] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[300] = "h_beta in component JIPR (dimensionless)"
    legend_constants[301] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[302] = "K_beta in component JIPR (micromolar)"
    legend_constants[704] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[12] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[49] = "zeta in component JIPR (dimensionless)"
    legend_constants[303] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[304] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[305] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[306] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[307] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[308] = "P in component model_parameters (micromolar)"
    legend_algebraic[146] = "JNCX in component JNCX (flux)"
    legend_constants[309] = "VNCX in component JNCX (flux)"
    legend_constants[310] = "KNCX in component JNCX (micromolar)"
    legend_constants[728] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[729] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[311] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[312] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[313] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[314] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[730] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[731] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[732] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[315] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[149] = "fm in component CMT (dimensionless)"
    legend_constants[316] = "Km in component CMT (micromolar)"
    legend_constants[317] = "Bm in component CMT (micromolar)"
    legend_constants[318] = "KO in component model_parameters (micromolar)"
    legend_constants[319] = "Ki in component model_parameters (micromolar)"
    legend_constants[320] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[162] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[166] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[739] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[153] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[156] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[164] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[158] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[161] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[160] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[321] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[322] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[323] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[324] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[147] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[150] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[325] = "T in component model_parameters (kelvin)"
    legend_constants[326] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[327] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[328] = "CO in component model_parameters (micromolar)"
    legend_constants[329] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[155] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[330] = "NO in component model_parameters (micromolar)"
    legend_states[50] = "NS1 in component NS1 (micromolar)"
    legend_constants[331] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[157] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[332] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[333] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[334] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[335] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[159] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[336] = "gPM in component I_PM (femtoampere)"
    legend_constants[337] = "KPM in component I_PM (micromolar)"
    legend_constants[338] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[339] = "KNaP in component I_NaP (micromolar)"
    legend_constants[340] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[341] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[163] = "JSERCA in component JSERCA (flux)"
    legend_constants[342] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[343] = "A2 in component JSERCA (dimensionless)"
    legend_constants[344] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[345] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[346] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[51] = "CER in component CER (micromolar)"
    legend_algebraic[167] = "JMCU in component JMCU (flux)"
    legend_constants[347] = "VMCU in component JMCU (flux)"
    legend_constants[348] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[165] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[349] = "KINH in component JMCU (micromolar)"
    legend_constants[350] = "hINH in component JMCU (dimensionless)"
    legend_states[52] = "CMT in component CMT (micromolar)"
    legend_algebraic[175] = "JIPR in component JIPR (flux)"
    legend_constants[351] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[352] = "k_1 in component JIPR (flux)"
    legend_constants[353] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[354] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[355] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[356] = "r_2 in component JIPR (flux)"
    legend_constants[357] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[358] = "R1 in component JIPR (micromolar)"
    legend_constants[359] = "R3 in component JIPR (micromolar)"
    legend_algebraic[169] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[172] = "phi_1 in component JIPR (flux)"
    legend_algebraic[176] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[178] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[53] = "H in component JIPR (dimensionless)"
    legend_constants[360] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[361] = "h_beta in component JIPR (dimensionless)"
    legend_constants[362] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[363] = "K_beta in component JIPR (micromolar)"
    legend_constants[705] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[13] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[54] = "zeta in component JIPR (dimensionless)"
    legend_constants[364] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[365] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[366] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[367] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[368] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[369] = "P in component model_parameters (micromolar)"
    legend_algebraic[170] = "JNCX in component JNCX (flux)"
    legend_constants[370] = "VNCX in component JNCX (flux)"
    legend_constants[371] = "KNCX in component JNCX (micromolar)"
    legend_constants[734] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[735] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[372] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[373] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[374] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[375] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[736] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[737] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[738] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[376] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[173] = "fm in component CMT (dimensionless)"
    legend_constants[377] = "Km in component CMT (micromolar)"
    legend_constants[378] = "Bm in component CMT (micromolar)"
    legend_constants[379] = "KO in component model_parameters (micromolar)"
    legend_constants[380] = "Ki in component model_parameters (micromolar)"
    legend_constants[381] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[186] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[190] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[745] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[177] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[180] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[188] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[182] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[185] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[184] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[382] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[383] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[384] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[385] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[171] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[174] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[386] = "T in component model_parameters (kelvin)"
    legend_constants[387] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[388] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[389] = "CO in component model_parameters (micromolar)"
    legend_constants[390] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[179] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[391] = "NO in component model_parameters (micromolar)"
    legend_states[55] = "NS1 in component NS1 (micromolar)"
    legend_constants[392] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[181] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[393] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[394] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[395] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[396] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[183] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[397] = "gPM in component I_PM (femtoampere)"
    legend_constants[398] = "KPM in component I_PM (micromolar)"
    legend_constants[399] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[400] = "KNaP in component I_NaP (micromolar)"
    legend_constants[401] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[402] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[187] = "JSERCA in component JSERCA (flux)"
    legend_constants[403] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[404] = "A2 in component JSERCA (dimensionless)"
    legend_constants[405] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[406] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[407] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[56] = "CER in component CER (micromolar)"
    legend_algebraic[191] = "JMCU in component JMCU (flux)"
    legend_constants[408] = "VMCU in component JMCU (flux)"
    legend_constants[409] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[189] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[410] = "KINH in component JMCU (micromolar)"
    legend_constants[411] = "hINH in component JMCU (dimensionless)"
    legend_states[57] = "CMT in component CMT (micromolar)"
    legend_algebraic[199] = "JIPR in component JIPR (flux)"
    legend_constants[412] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[413] = "k_1 in component JIPR (flux)"
    legend_constants[414] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[415] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[416] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[417] = "r_2 in component JIPR (flux)"
    legend_constants[418] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[419] = "R1 in component JIPR (micromolar)"
    legend_constants[420] = "R3 in component JIPR (micromolar)"
    legend_algebraic[193] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[196] = "phi_1 in component JIPR (flux)"
    legend_algebraic[200] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[202] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[58] = "H in component JIPR (dimensionless)"
    legend_constants[421] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[422] = "h_beta in component JIPR (dimensionless)"
    legend_constants[423] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[424] = "K_beta in component JIPR (micromolar)"
    legend_constants[706] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[14] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[59] = "zeta in component JIPR (dimensionless)"
    legend_constants[425] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[426] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[427] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[428] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[429] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[430] = "P in component model_parameters (micromolar)"
    legend_algebraic[194] = "JNCX in component JNCX (flux)"
    legend_constants[431] = "VNCX in component JNCX (flux)"
    legend_constants[432] = "KNCX in component JNCX (micromolar)"
    legend_constants[740] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[741] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[433] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[434] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[435] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[436] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[742] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[743] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[744] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[437] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[197] = "fm in component CMT (dimensionless)"
    legend_constants[438] = "Km in component CMT (micromolar)"
    legend_constants[439] = "Bm in component CMT (micromolar)"
    legend_constants[440] = "KO in component model_parameters (micromolar)"
    legend_constants[441] = "Ki in component model_parameters (micromolar)"
    legend_constants[442] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[210] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[214] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[751] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[201] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[204] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[212] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[206] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[209] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[208] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[443] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[444] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[445] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[446] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[195] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[198] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[447] = "T in component model_parameters (kelvin)"
    legend_constants[448] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[449] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[450] = "CO in component model_parameters (micromolar)"
    legend_constants[451] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[203] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[452] = "NO in component model_parameters (micromolar)"
    legend_states[60] = "NS1 in component NS1 (micromolar)"
    legend_constants[453] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[205] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[454] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[455] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[456] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[457] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[207] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[458] = "gPM in component I_PM (femtoampere)"
    legend_constants[459] = "KPM in component I_PM (micromolar)"
    legend_constants[460] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[461] = "KNaP in component I_NaP (micromolar)"
    legend_constants[462] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[463] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[211] = "JSERCA in component JSERCA (flux)"
    legend_constants[464] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[465] = "A2 in component JSERCA (dimensionless)"
    legend_constants[466] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[467] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[468] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[61] = "CER in component CER (micromolar)"
    legend_algebraic[215] = "JMCU in component JMCU (flux)"
    legend_constants[469] = "VMCU in component JMCU (flux)"
    legend_constants[470] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[213] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[471] = "KINH in component JMCU (micromolar)"
    legend_constants[472] = "hINH in component JMCU (dimensionless)"
    legend_states[62] = "CMT in component CMT (micromolar)"
    legend_algebraic[223] = "JIPR in component JIPR (flux)"
    legend_constants[473] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[474] = "k_1 in component JIPR (flux)"
    legend_constants[475] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[476] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[477] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[478] = "r_2 in component JIPR (flux)"
    legend_constants[479] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[480] = "R1 in component JIPR (micromolar)"
    legend_constants[481] = "R3 in component JIPR (micromolar)"
    legend_algebraic[217] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[220] = "phi_1 in component JIPR (flux)"
    legend_algebraic[224] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[226] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[63] = "H in component JIPR (dimensionless)"
    legend_constants[482] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[483] = "h_beta in component JIPR (dimensionless)"
    legend_constants[484] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[485] = "K_beta in component JIPR (micromolar)"
    legend_constants[707] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[15] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[64] = "zeta in component JIPR (dimensionless)"
    legend_constants[486] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[487] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[488] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[489] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[490] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[491] = "P in component model_parameters (micromolar)"
    legend_algebraic[218] = "JNCX in component JNCX (flux)"
    legend_constants[492] = "VNCX in component JNCX (flux)"
    legend_constants[493] = "KNCX in component JNCX (micromolar)"
    legend_constants[746] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[747] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[494] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[495] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[496] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[497] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[748] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[749] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[750] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[498] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[221] = "fm in component CMT (dimensionless)"
    legend_constants[499] = "Km in component CMT (micromolar)"
    legend_constants[500] = "Bm in component CMT (micromolar)"
    legend_constants[501] = "KO in component model_parameters (micromolar)"
    legend_constants[502] = "Ki in component model_parameters (micromolar)"
    legend_constants[503] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[234] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[238] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[757] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[225] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[228] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[236] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[230] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[233] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[232] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[504] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[505] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[506] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[507] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[219] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[222] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[508] = "T in component model_parameters (kelvin)"
    legend_constants[509] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[510] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[511] = "CO in component model_parameters (micromolar)"
    legend_constants[512] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[227] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[513] = "NO in component model_parameters (micromolar)"
    legend_states[65] = "NS1 in component NS1 (micromolar)"
    legend_constants[514] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[229] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[515] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[516] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[517] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[518] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[231] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[519] = "gPM in component I_PM (femtoampere)"
    legend_constants[520] = "KPM in component I_PM (micromolar)"
    legend_constants[521] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[522] = "KNaP in component I_NaP (micromolar)"
    legend_constants[523] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[524] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[235] = "JSERCA in component JSERCA (flux)"
    legend_constants[525] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[526] = "A2 in component JSERCA (dimensionless)"
    legend_constants[527] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[528] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[529] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[66] = "CER in component CER (micromolar)"
    legend_algebraic[239] = "JMCU in component JMCU (flux)"
    legend_constants[530] = "VMCU in component JMCU (flux)"
    legend_constants[531] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[237] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[532] = "KINH in component JMCU (micromolar)"
    legend_constants[533] = "hINH in component JMCU (dimensionless)"
    legend_states[67] = "CMT in component CMT (micromolar)"
    legend_algebraic[247] = "JIPR in component JIPR (flux)"
    legend_constants[534] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[535] = "k_1 in component JIPR (flux)"
    legend_constants[536] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[537] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[538] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[539] = "r_2 in component JIPR (flux)"
    legend_constants[540] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[541] = "R1 in component JIPR (micromolar)"
    legend_constants[542] = "R3 in component JIPR (micromolar)"
    legend_algebraic[241] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[244] = "phi_1 in component JIPR (flux)"
    legend_algebraic[248] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[250] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[68] = "H in component JIPR (dimensionless)"
    legend_constants[543] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[544] = "h_beta in component JIPR (dimensionless)"
    legend_constants[545] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[546] = "K_beta in component JIPR (micromolar)"
    legend_constants[708] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[16] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[69] = "zeta in component JIPR (dimensionless)"
    legend_constants[547] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[548] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[549] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[550] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[551] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[552] = "P in component model_parameters (micromolar)"
    legend_algebraic[242] = "JNCX in component JNCX (flux)"
    legend_constants[553] = "VNCX in component JNCX (flux)"
    legend_constants[554] = "KNCX in component JNCX (micromolar)"
    legend_constants[752] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[753] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[555] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[556] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[557] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[558] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[754] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[755] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[756] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[559] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[245] = "fm in component CMT (dimensionless)"
    legend_constants[560] = "Km in component CMT (micromolar)"
    legend_constants[561] = "Bm in component CMT (micromolar)"
    legend_constants[562] = "KO in component model_parameters (micromolar)"
    legend_constants[563] = "Ki in component model_parameters (micromolar)"
    legend_constants[564] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[258] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[262] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[763] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[249] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[252] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[260] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[254] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[257] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[256] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[565] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[566] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[567] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[568] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[243] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[246] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[569] = "T in component model_parameters (kelvin)"
    legend_constants[570] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[571] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[572] = "CO in component model_parameters (micromolar)"
    legend_constants[573] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[251] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[574] = "NO in component model_parameters (micromolar)"
    legend_states[70] = "NS1 in component NS1 (micromolar)"
    legend_constants[575] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[253] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[576] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[577] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[578] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[579] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[255] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[580] = "gPM in component I_PM (femtoampere)"
    legend_constants[581] = "KPM in component I_PM (micromolar)"
    legend_constants[582] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[583] = "KNaP in component I_NaP (micromolar)"
    legend_constants[584] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[585] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[259] = "JSERCA in component JSERCA (flux)"
    legend_constants[586] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[587] = "A2 in component JSERCA (dimensionless)"
    legend_constants[588] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[589] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[590] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[71] = "CER in component CER (micromolar)"
    legend_algebraic[263] = "JMCU in component JMCU (flux)"
    legend_constants[591] = "VMCU in component JMCU (flux)"
    legend_constants[592] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[261] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[593] = "KINH in component JMCU (micromolar)"
    legend_constants[594] = "hINH in component JMCU (dimensionless)"
    legend_states[72] = "CMT in component CMT (micromolar)"
    legend_algebraic[271] = "JIPR in component JIPR (flux)"
    legend_constants[595] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[596] = "k_1 in component JIPR (flux)"
    legend_constants[597] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[598] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[599] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[600] = "r_2 in component JIPR (flux)"
    legend_constants[601] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[602] = "R1 in component JIPR (micromolar)"
    legend_constants[603] = "R3 in component JIPR (micromolar)"
    legend_algebraic[265] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[268] = "phi_1 in component JIPR (flux)"
    legend_algebraic[272] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[274] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[73] = "H in component JIPR (dimensionless)"
    legend_constants[604] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[605] = "h_beta in component JIPR (dimensionless)"
    legend_constants[606] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[607] = "K_beta in component JIPR (micromolar)"
    legend_constants[709] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[17] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[74] = "zeta in component JIPR (dimensionless)"
    legend_constants[608] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[609] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[610] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[611] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[612] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[613] = "P in component model_parameters (micromolar)"
    legend_algebraic[266] = "JNCX in component JNCX (flux)"
    legend_constants[614] = "VNCX in component JNCX (flux)"
    legend_constants[615] = "KNCX in component JNCX (micromolar)"
    legend_constants[758] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[759] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[616] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[617] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[618] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[619] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[760] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[761] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[762] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[620] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[269] = "fm in component CMT (dimensionless)"
    legend_constants[621] = "Km in component CMT (micromolar)"
    legend_constants[622] = "Bm in component CMT (micromolar)"
    legend_constants[623] = "KO in component model_parameters (micromolar)"
    legend_constants[624] = "Ki in component model_parameters (micromolar)"
    legend_constants[625] = "n_PU_base in component model_parameters (dimensionless)"
    legend_algebraic[282] = "I_iCa in component PU_membrane (picoampere)"
    legend_algebraic[285] = "I_iNa in component PU_membrane (picoampere)"
    legend_constants[769] = "alpha_scale in component model_parameters (dimensionless)"
    legend_algebraic[273] = "I_Ca in component I_Ca (picoampere)"
    legend_algebraic[276] = "I_Na in component I_Na (picoampere)"
    legend_algebraic[283] = "I_NaP in component I_NaP (picoampere)"
    legend_algebraic[278] = "I_NSCC_Ca in component I_NSCC_Ca (picoampere)"
    legend_algebraic[281] = "I_PM in component I_PM (picoampere)"
    legend_algebraic[280] = "I_NSCC_Na in component I_NSCC_Na (picoampere)"
    legend_constants[626] = "gCa_ in component I_Ca (picosiemens)"
    legend_constants[627] = "kCa in component I_Ca (per_millivolt)"
    legend_constants[628] = "kVCa in component I_Ca (per_millivolt)"
    legend_constants[629] = "VhCa in component I_Ca (millivolt)"
    legend_algebraic[267] = "gCa in component I_Ca (picosiemens)"
    legend_algebraic[270] = "ECa_PU in component I_Ca (millivolt)"
    legend_constants[630] = "T in component model_parameters (kelvin)"
    legend_constants[631] = "R in component model_parameters (attojoule_per_zeptomole_kelvin)"
    legend_constants[632] = "F in component model_parameters (femtocoulomb_per_zeptomole)"
    legend_constants[633] = "CO in component model_parameters (micromolar)"
    legend_constants[634] = "gNa in component I_Na (picosiemens)"
    legend_algebraic[275] = "ENa_PU in component I_Na (millivolt)"
    legend_constants[635] = "NO in component model_parameters (micromolar)"
    legend_states[75] = "NS1 in component NS1 (micromolar)"
    legend_constants[636] = "gNSCC_Ca_ in component I_NSCC_Ca (picosiemens)"
    legend_algebraic[277] = "gNSCC_Ca in component I_NSCC_Ca (picosiemens)"
    legend_constants[637] = "hNSCC in component model_parameters (dimensionless)"
    legend_constants[638] = "ENSCC in component model_parameters (millivolt)"
    legend_constants[639] = "KNSCC in component model_parameters (micromolar)"
    legend_constants[640] = "gNSCC_Na_ in component I_NSCC_Na (picosiemens)"
    legend_algebraic[279] = "gNSCC_Na in component I_NSCC_Na (picosiemens)"
    legend_constants[641] = "gPM in component I_PM (femtoampere)"
    legend_constants[642] = "KPM in component I_PM (micromolar)"
    legend_constants[643] = "gNaP in component I_NaP (picosiemens)"
    legend_constants[644] = "KNaP in component I_NaP (micromolar)"
    legend_constants[645] = "hNaP in component I_NaP (dimensionless)"
    legend_constants[646] = "ENaP in component I_NaP (millivolt)"
    legend_algebraic[284] = "JSERCA in component JSERCA (flux)"
    legend_constants[647] = "VSERCA in component JSERCA (first_order_rate_constant)"
    legend_constants[648] = "A2 in component JSERCA (dimensionless)"
    legend_constants[649] = "A4 in component JSERCA (per_micromolar)"
    legend_constants[650] = "A5 in component JSERCA (per_micromolar)"
    legend_constants[651] = "A6 in component JSERCA (per_micromolar2)"
    legend_states[76] = "CER in component CER (micromolar)"
    legend_algebraic[288] = "JMCU in component JMCU (flux)"
    legend_constants[652] = "VMCU in component JMCU (flux)"
    legend_constants[653] = "KMCU in component JMCU (micromolar)"
    legend_algebraic[286] = "epsilon_INH in component JMCU (dimensionless)"
    legend_constants[654] = "KINH in component JMCU (micromolar)"
    legend_constants[655] = "hINH in component JMCU (dimensionless)"
    legend_states[77] = "CMT in component CMT (micromolar)"
    legend_algebraic[293] = "JIPR in component JIPR (flux)"
    legend_constants[656] = "kIPR in component JIPR (first_order_rate_constant)"
    legend_constants[657] = "k_1 in component JIPR (flux)"
    legend_constants[658] = "k1 in component JIPR (first_order_rate_constant)"
    legend_constants[659] = "k2 in component JIPR (first_order_rate_constant)"
    legend_constants[660] = "r2 in component JIPR (first_order_rate_constant)"
    legend_constants[661] = "r_2 in component JIPR (flux)"
    legend_constants[662] = "r4 in component JIPR (first_order_rate_constant)"
    legend_constants[663] = "R1 in component JIPR (micromolar)"
    legend_constants[664] = "R3 in component JIPR (micromolar)"
    legend_algebraic[289] = "phi1 in component JIPR (first_order_rate_constant)"
    legend_algebraic[291] = "phi_1 in component JIPR (flux)"
    legend_algebraic[294] = "phi2 in component JIPR (first_order_rate_constant)"
    legend_algebraic[295] = "phi3 in component JIPR (first_order_rate_constant)"
    legend_states[78] = "H in component JIPR (dimensionless)"
    legend_constants[665] = "g_beta in component JIPR (first_order_rate_constant)"
    legend_constants[666] = "h_beta in component JIPR (dimensionless)"
    legend_constants[667] = "g_alpha in component JIPR (first_order_rate_constant)"
    legend_constants[668] = "K_beta in component JIPR (micromolar)"
    legend_constants[710] = "alpha_zeta in component JIPR (first_order_rate_constant)"
    legend_algebraic[18] = "beta_zeta in component JIPR (first_order_rate_constant)"
    legend_states[79] = "zeta in component JIPR (dimensionless)"
    legend_constants[669] = "K_phi3_act in component JIPR (micromolar)"
    legend_constants[670] = "K_phi3_inh in component JIPR (micromolar)"
    legend_constants[671] = "h_phi3_act in component JIPR (dimensionless)"
    legend_constants[672] = "h_phi3_inh in component JIPR (dimensionless)"
    legend_constants[673] = "g_phi3 in component JIPR (first_order_rate_constant)"
    legend_constants[674] = "P in component model_parameters (micromolar)"
    legend_algebraic[290] = "JNCX in component JNCX (flux)"
    legend_constants[675] = "VNCX in component JNCX (flux)"
    legend_constants[676] = "KNCX in component JNCX (micromolar)"
    legend_constants[764] = "lambda_MT_S1 in component CS1 (dimensionless)"
    legend_constants[765] = "lambda_ER_S1 in component CS1 (dimensionless)"
    legend_constants[677] = "delta_SPU in component model_parameters (micromolar_per_coulomb)"
    legend_constants[678] = "gamma_S1 in component model_parameters (dimensionless)"
    legend_constants[679] = "gamma_MT in component model_parameters (dimensionless)"
    legend_constants[680] = "gamma_ER in component model_parameters (dimensionless)"
    legend_constants[766] = "lambda_MT_S2 in component CS2 (dimensionless)"
    legend_constants[767] = "lambda_ER_S2 in component CS2 (dimensionless)"
    legend_constants[768] = "lambda_S1_S2 in component CS2 (dimensionless)"
    legend_constants[681] = "gamma_S2 in component model_parameters (dimensionless)"
    legend_algebraic[292] = "fm in component CMT (dimensionless)"
    legend_constants[682] = "Km in component CMT (micromolar)"
    legend_constants[683] = "Bm in component CMT (micromolar)"
    legend_constants[684] = "KO in component model_parameters (micromolar)"
    legend_constants[685] = "Ki in component model_parameters (micromolar)"
    legend_constants[686] = "n_PU_base in component model_parameters (dimensionless)"
    legend_rates[0] = "d/dt OCaT in component I_CaT (dimensionless)"
    legend_rates[2] = "d/dt dT in component I_CaT_d_gate (dimensionless)"
    legend_rates[3] = "d/dt fT in component I_CaT_f_gate (dimensionless)"
    legend_rates[5] = "d/dt dv1_1 in component I_Kv1_1_d_gate (dimensionless)"
    legend_rates[6] = "d/dt fv1_1 in component I_Kv1_1_f_gate (dimensionless)"
    legend_rates[7] = "d/dt dERG in component I_KERG_d_gate (dimensionless)"
    legend_rates[8] = "d/dt dNa in component I_Na_d_gate (dimensionless)"
    legend_rates[9] = "d/dt fNa in component I_Na_f_gate (dimensionless)"
    legend_rates[1] = "d/dt Vm in component membrane (millivolt)"
    legend_rates[4] = "d/dt CCy in component CCy (micromolar)"
    legend_rates[33] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[34] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[20] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[10] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[31] = "d/dt CER in component CER (micromolar)"
    legend_rates[32] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[30] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[38] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[39] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[21] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[11] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[36] = "d/dt CER in component CER (micromolar)"
    legend_rates[37] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[35] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[43] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[44] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[22] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[12] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[41] = "d/dt CER in component CER (micromolar)"
    legend_rates[42] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[40] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[48] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[49] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[23] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[13] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[46] = "d/dt CER in component CER (micromolar)"
    legend_rates[47] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[45] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[53] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[54] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[24] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[14] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[51] = "d/dt CER in component CER (micromolar)"
    legend_rates[52] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[50] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[58] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[59] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[25] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[15] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[56] = "d/dt CER in component CER (micromolar)"
    legend_rates[57] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[55] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[63] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[64] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[26] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[16] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[61] = "d/dt CER in component CER (micromolar)"
    legend_rates[62] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[60] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[68] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[69] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[27] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[17] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[66] = "d/dt CER in component CER (micromolar)"
    legend_rates[67] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[65] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[73] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[74] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[28] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[18] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[71] = "d/dt CER in component CER (micromolar)"
    legend_rates[72] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[70] = "d/dt NS1 in component NS1 (micromolar)"
    legend_rates[78] = "d/dt H in component JIPR (dimensionless)"
    legend_rates[79] = "d/dt zeta in component JIPR (dimensionless)"
    legend_rates[29] = "d/dt CS1 in component CS1 (micromolar)"
    legend_rates[19] = "d/dt CS2 in component CS2 (micromolar)"
    legend_rates[76] = "d/dt CER in component CER (micromolar)"
    legend_rates[77] = "d/dt CMT in component CMT (micromolar)"
    legend_rates[75] = "d/dt NS1 in component NS1 (micromolar)"
    return (legend_states, legend_algebraic, legend_voi, legend_constants)

def initConsts():
    constants = [0.0] * sizeConstants; states = [0.0] * sizeStates;
    constants[0] = 700.0
    constants[1] = 17.0
    constants[2] = 800.0
    constants[3] = 72
    states[0] = 0
    states[1] = -70.0
    states[2] = 0.010
    states[3] = 0.001
    constants[4] = 0.0025
    constants[5] = -0.60
    constants[6] = -53
    constants[7] = 0.019
    constants[8] = 6.75
    constants[9] = 2
    constants[10] = -40
    constants[11] = 1
    constants[12] = -65
    constants[13] = 100.0
    constants[14] = 1.0
    states[4] = 0.12
    constants[15] = 10.0
    states[5] = 0.000
    states[6] = 1.0
    constants[16] = 0.0
    constants[17] = 250.0
    constants[18] = -0.077
    constants[19] = -4.8
    constants[20] = 0.80
    constants[21] = -0.13
    constants[22] = -25.0
    constants[23] = 333.0
    constants[24] = 0.10
    constants[25] = 0.23
    constants[26] = -44.8
    constants[27] = 10.0
    states[7] = 0.000
    constants[28] = 1000.0
    constants[29] = 0.70
    constants[30] = -0.56
    constants[31] = 30
    constants[32] = 6.0
    constants[33] = 2000.0
    states[8] = 0.000
    states[9] = 0.100
    constants[34] = 250.0
    constants[35] = 1000.0
    constants[36] = -0.2
    constants[37] = -15.0
    constants[38] = 1.0
    constants[39] = -0.147
    constants[40] = -35.3
    constants[41] = 10.0
    constants[42] = 50.0
    constants[43] = -0.036
    constants[44] = -38.0
    constants[45] = 1.00
    constants[46] = 0.167
    constants[47] = -83.0
    constants[48] = 0.20
    constants[49] = 0.0
    constants[50] = 20.0
    constants[51] = 310.16
    constants[52] = 8.314E-3
    constants[53] = 0.09649
    constants[54] = 1.8E3
    constants[55] = 5400.0
    constants[56] = 145E3
    constants[57] = 140E3
    constants[58] = 10E3
    constants[59] = 1.0E-3
    constants[60] = 0.002
    constants[61] = 0.000
    constants[62] = 0.3361
    constants[63] = 0.3658
    constants[64] = 0.4357
    constants[65] = 0.5351
    constants[66] = 0.6366
    constants[67] = 0.7386
    constants[68] = 0.8361
    constants[69] = 0.9320
    constants[70] = 1.0185
    states[10] = 0.023
    states[11] = 0.023
    states[12] = 0.023
    states[13] = 0.023
    states[14] = 0.023
    states[15] = 0.023
    states[16] = 0.023
    states[17] = 0.023
    states[18] = 0.023
    states[19] = 0.023
    constants[71] = 0.30
    constants[72] = 0.24
    constants[73] = 10.0
    states[20] = 0.120
    states[21] = 0.120
    states[22] = 0.120
    states[23] = 0.120
    states[24] = 0.120
    states[25] = 0.120
    states[26] = 0.120
    states[27] = 0.120
    states[28] = 0.120
    states[29] = 0.120
    constants[74] = 1.30
    constants[75] = 0.12
    constants[76] = 1.0
    constants[77] = 0.074
    constants[78] = 0.013
    constants[79] = -0.20
    constants[80] = -85.0
    constants[81] = 310.16
    constants[82] = 8.314E-3
    constants[83] = 0.09649
    constants[84] = 1.8E3
    constants[85] = 13.5
    constants[86] = 140.0E3
    states[30] = 1.01E4
    constants[87] = 0.10
    constants[88] = 3.0
    constants[89] = 0.0
    constants[90] = 0.12
    constants[91] = 160.0
    constants[92] = 675.0
    constants[93] = 1.0
    constants[94] = 187.5
    constants[95] = 1.0E4
    constants[96] = 4.0
    constants[97] = 10.0
    constants[98] = 1.0E5
    constants[99] = 6E-4
    constants[100] = 3.57
    constants[101] = 2.7E-5
    constants[102] = 2.31E-5
    states[31] = 200.0
    constants[103] = 800.0
    constants[104] = 10.0
    constants[105] = 10.0
    constants[106] = 4.0
    states[32] = 0.200
    constants[107] = 2000.0
    constants[108] = 6.4
    constants[109] = 0.0
    constants[110] = 4.0
    constants[111] = 250.0
    constants[112] = 0.0
    constants[113] = 750.0
    constants[114] = 36.0
    constants[115] = 300.0
    states[33] = 0.200
    constants[116] = 1500.0
    constants[117] = 4.0
    constants[118] = 0.85
    constants[119] = 0.35
    states[34] = 0.300
    constants[120] = 0.1
    constants[121] = 0.5
    constants[122] = 3.0
    constants[123] = 3.0
    constants[124] = 4.5
    constants[125] = 1.0
    constants[126] = 3.0
    constants[127] = 0.3
    constants[128] = 18.5
    constants[129] = 100.0
    constants[130] = 200.0
    constants[131] = 20.0
    constants[132] = 1.0
    constants[133] = 0.01
    constants[134] = 100.0
    constants[135] = 5400.0
    constants[136] = 145E3
    constants[137] = 50.0
    constants[138] = 0.074
    constants[139] = 0.013
    constants[140] = -0.20
    constants[141] = -85.0
    constants[142] = 310.16
    constants[143] = 8.314E-3
    constants[144] = 0.09649
    constants[145] = 1.8E3
    constants[146] = 13.5
    constants[147] = 140.0E3
    states[35] = 1.01E4
    constants[148] = 0.10
    constants[149] = 3.0
    constants[150] = 0.0
    constants[151] = 0.12
    constants[152] = 160.0
    constants[153] = 675.0
    constants[154] = 1.0
    constants[155] = 187.5
    constants[156] = 1.0E4
    constants[157] = 4.0
    constants[158] = 10.0
    constants[159] = 1.0E5
    constants[160] = 6E-4
    constants[161] = 3.57
    constants[162] = 2.7E-5
    constants[163] = 2.31E-5
    states[36] = 200.0
    constants[164] = 800.0
    constants[165] = 10.0
    constants[166] = 10.0
    constants[167] = 4.0
    states[37] = 0.200
    constants[168] = 2000.0
    constants[169] = 6.4
    constants[170] = 0.0
    constants[171] = 4.0
    constants[172] = 250.0
    constants[173] = 0.0
    constants[174] = 750.0
    constants[175] = 36.0
    constants[176] = 300.0
    states[38] = 0.200
    constants[177] = 1500.0
    constants[178] = 4.0
    constants[179] = 0.85
    constants[180] = 0.35
    states[39] = 0.300
    constants[181] = 0.1
    constants[182] = 0.5
    constants[183] = 3.0
    constants[184] = 3.0
    constants[185] = 4.5
    constants[186] = 1.0
    constants[187] = 3.0
    constants[188] = 0.3
    constants[189] = 18.5
    constants[190] = 100.0
    constants[191] = 200.0
    constants[192] = 20.0
    constants[193] = 1.0
    constants[194] = 0.01
    constants[195] = 100.0
    constants[196] = 5400.0
    constants[197] = 145E3
    constants[198] = 50.0
    constants[199] = 0.074
    constants[200] = 0.013
    constants[201] = -0.20
    constants[202] = -85.0
    constants[203] = 310.16
    constants[204] = 8.314E-3
    constants[205] = 0.09649
    constants[206] = 1.8E3
    constants[207] = 13.5
    constants[208] = 140.0E3
    states[40] = 1.01E4
    constants[209] = 0.10
    constants[210] = 3.0
    constants[211] = 0.0
    constants[212] = 0.12
    constants[213] = 160.0
    constants[214] = 675.0
    constants[215] = 1.0
    constants[216] = 187.5
    constants[217] = 1.0E4
    constants[218] = 4.0
    constants[219] = 10.0
    constants[220] = 1.0E5
    constants[221] = 6E-4
    constants[222] = 3.57
    constants[223] = 2.7E-5
    constants[224] = 2.31E-5
    states[41] = 200.0
    constants[225] = 800.0
    constants[226] = 10.0
    constants[227] = 10.0
    constants[228] = 4.0
    states[42] = 0.200
    constants[229] = 2000.0
    constants[230] = 6.4
    constants[231] = 0.0
    constants[232] = 4.0
    constants[233] = 250.0
    constants[234] = 0.0
    constants[235] = 750.0
    constants[236] = 36.0
    constants[237] = 300.0
    states[43] = 0.200
    constants[238] = 1500.0
    constants[239] = 4.0
    constants[240] = 0.85
    constants[241] = 0.35
    states[44] = 0.300
    constants[242] = 0.1
    constants[243] = 0.5
    constants[244] = 3.0
    constants[245] = 3.0
    constants[246] = 4.5
    constants[247] = 1.0
    constants[248] = 3.0
    constants[249] = 0.3
    constants[250] = 18.5
    constants[251] = 100.0
    constants[252] = 200.0
    constants[253] = 20.0
    constants[254] = 1.0
    constants[255] = 0.01
    constants[256] = 100.0
    constants[257] = 5400.0
    constants[258] = 145E3
    constants[259] = 50.0
    constants[260] = 0.074
    constants[261] = 0.013
    constants[262] = -0.20
    constants[263] = -85.0
    constants[264] = 310.16
    constants[265] = 8.314E-3
    constants[266] = 0.09649
    constants[267] = 1.8E3
    constants[268] = 13.5
    constants[269] = 140.0E3
    states[45] = 1.01E4
    constants[270] = 0.10
    constants[271] = 3.0
    constants[272] = 0.0
    constants[273] = 0.12
    constants[274] = 160.0
    constants[275] = 675.0
    constants[276] = 1.0
    constants[277] = 187.5
    constants[278] = 1.0E4
    constants[279] = 4.0
    constants[280] = 10.0
    constants[281] = 1.0E5
    constants[282] = 6E-4
    constants[283] = 3.57
    constants[284] = 2.7E-5
    constants[285] = 2.31E-5
    states[46] = 200.0
    constants[286] = 800.0
    constants[287] = 10.0
    constants[288] = 10.0
    constants[289] = 4.0
    states[47] = 0.200
    constants[290] = 2000.0
    constants[291] = 6.4
    constants[292] = 0.0
    constants[293] = 4.0
    constants[294] = 250.0
    constants[295] = 0.0
    constants[296] = 750.0
    constants[297] = 36.0
    constants[298] = 300.0
    states[48] = 0.200
    constants[299] = 1500.0
    constants[300] = 4.0
    constants[301] = 0.85
    constants[302] = 0.35
    states[49] = 0.300
    constants[303] = 0.1
    constants[304] = 0.5
    constants[305] = 3.0
    constants[306] = 3.0
    constants[307] = 4.5
    constants[308] = 1.0
    constants[309] = 3.0
    constants[310] = 0.3
    constants[311] = 18.5
    constants[312] = 100.0
    constants[313] = 200.0
    constants[314] = 20.0
    constants[315] = 1.0
    constants[316] = 0.01
    constants[317] = 100.0
    constants[318] = 5400.0
    constants[319] = 145E3
    constants[320] = 50.0
    constants[321] = 0.074
    constants[322] = 0.013
    constants[323] = -0.20
    constants[324] = -85.0
    constants[325] = 310.16
    constants[326] = 8.314E-3
    constants[327] = 0.09649
    constants[328] = 1.8E3
    constants[329] = 13.5
    constants[330] = 140.0E3
    states[50] = 1.01E4
    constants[331] = 0.10
    constants[332] = 3.0
    constants[333] = 0.0
    constants[334] = 0.12
    constants[335] = 160.0
    constants[336] = 675.0
    constants[337] = 1.0
    constants[338] = 187.5
    constants[339] = 1.0E4
    constants[340] = 4.0
    constants[341] = 10.0
    constants[342] = 1.0E5
    constants[343] = 6E-4
    constants[344] = 3.57
    constants[345] = 2.7E-5
    constants[346] = 2.31E-5
    states[51] = 200.0
    constants[347] = 800.0
    constants[348] = 10.0
    constants[349] = 10.0
    constants[350] = 4.0
    states[52] = 0.200
    constants[351] = 2000.0
    constants[352] = 6.4
    constants[353] = 0.0
    constants[354] = 4.0
    constants[355] = 250.0
    constants[356] = 0.0
    constants[357] = 750.0
    constants[358] = 36.0
    constants[359] = 300.0
    states[53] = 0.200
    constants[360] = 1500.0
    constants[361] = 4.0
    constants[362] = 0.85
    constants[363] = 0.35
    states[54] = 0.300
    constants[364] = 0.1
    constants[365] = 0.5
    constants[366] = 3.0
    constants[367] = 3.0
    constants[368] = 4.5
    constants[369] = 1.0
    constants[370] = 3.0
    constants[371] = 0.3
    constants[372] = 18.5
    constants[373] = 100.0
    constants[374] = 200.0
    constants[375] = 20.0
    constants[376] = 1.0
    constants[377] = 0.01
    constants[378] = 100.0
    constants[379] = 5400.0
    constants[380] = 145E3
    constants[381] = 50.0
    constants[382] = 0.074
    constants[383] = 0.013
    constants[384] = -0.20
    constants[385] = -85.0
    constants[386] = 310.16
    constants[387] = 8.314E-3
    constants[388] = 0.09649
    constants[389] = 1.8E3
    constants[390] = 13.5
    constants[391] = 140.0E3
    states[55] = 1.01E4
    constants[392] = 0.10
    constants[393] = 3.0
    constants[394] = 0.0
    constants[395] = 0.12
    constants[396] = 160.0
    constants[397] = 675.0
    constants[398] = 1.0
    constants[399] = 187.5
    constants[400] = 1.0E4
    constants[401] = 4.0
    constants[402] = 10.0
    constants[403] = 1.0E5
    constants[404] = 6E-4
    constants[405] = 3.57
    constants[406] = 2.7E-5
    constants[407] = 2.31E-5
    states[56] = 200.0
    constants[408] = 800.0
    constants[409] = 10.0
    constants[410] = 10.0
    constants[411] = 4.0
    states[57] = 0.200
    constants[412] = 2000.0
    constants[413] = 6.4
    constants[414] = 0.0
    constants[415] = 4.0
    constants[416] = 250.0
    constants[417] = 0.0
    constants[418] = 750.0
    constants[419] = 36.0
    constants[420] = 300.0
    states[58] = 0.200
    constants[421] = 1500.0
    constants[422] = 4.0
    constants[423] = 0.85
    constants[424] = 0.35
    states[59] = 0.300
    constants[425] = 0.1
    constants[426] = 0.5
    constants[427] = 3.0
    constants[428] = 3.0
    constants[429] = 4.5
    constants[430] = 1.0
    constants[431] = 3.0
    constants[432] = 0.3
    constants[433] = 18.5
    constants[434] = 100.0
    constants[435] = 200.0
    constants[436] = 20.0
    constants[437] = 1.0
    constants[438] = 0.01
    constants[439] = 100.0
    constants[440] = 5400.0
    constants[441] = 145E3
    constants[442] = 50.0
    constants[443] = 0.074
    constants[444] = 0.013
    constants[445] = -0.20
    constants[446] = -85.0
    constants[447] = 310.16
    constants[448] = 8.314E-3
    constants[449] = 0.09649
    constants[450] = 1.8E3
    constants[451] = 13.5
    constants[452] = 140.0E3
    states[60] = 1.01E4
    constants[453] = 0.10
    constants[454] = 3.0
    constants[455] = 0.0
    constants[456] = 0.12
    constants[457] = 160.0
    constants[458] = 675.0
    constants[459] = 1.0
    constants[460] = 187.5
    constants[461] = 1.0E4
    constants[462] = 4.0
    constants[463] = 10.0
    constants[464] = 1.0E5
    constants[465] = 6E-4
    constants[466] = 3.57
    constants[467] = 2.7E-5
    constants[468] = 2.31E-5
    states[61] = 200.0
    constants[469] = 800.0
    constants[470] = 10.0
    constants[471] = 10.0
    constants[472] = 4.0
    states[62] = 0.200
    constants[473] = 2000.0
    constants[474] = 6.4
    constants[475] = 0.0
    constants[476] = 4.0
    constants[477] = 250.0
    constants[478] = 0.0
    constants[479] = 750.0
    constants[480] = 36.0
    constants[481] = 300.0
    states[63] = 0.200
    constants[482] = 1500.0
    constants[483] = 4.0
    constants[484] = 0.85
    constants[485] = 0.35
    states[64] = 0.300
    constants[486] = 0.1
    constants[487] = 0.5
    constants[488] = 3.0
    constants[489] = 3.0
    constants[490] = 4.5
    constants[491] = 1.0
    constants[492] = 3.0
    constants[493] = 0.3
    constants[494] = 18.5
    constants[495] = 100.0
    constants[496] = 200.0
    constants[497] = 20.0
    constants[498] = 1.0
    constants[499] = 0.01
    constants[500] = 100.0
    constants[501] = 5400.0
    constants[502] = 145E3
    constants[503] = 50.0
    constants[504] = 0.074
    constants[505] = 0.013
    constants[506] = -0.20
    constants[507] = -85.0
    constants[508] = 310.16
    constants[509] = 8.314E-3
    constants[510] = 0.09649
    constants[511] = 1.8E3
    constants[512] = 13.5
    constants[513] = 140.0E3
    states[65] = 1.01E4
    constants[514] = 0.10
    constants[515] = 3.0
    constants[516] = 0.0
    constants[517] = 0.12
    constants[518] = 160.0
    constants[519] = 675.0
    constants[520] = 1.0
    constants[521] = 187.5
    constants[522] = 1.0E4
    constants[523] = 4.0
    constants[524] = 10.0
    constants[525] = 1.0E5
    constants[526] = 6E-4
    constants[527] = 3.57
    constants[528] = 2.7E-5
    constants[529] = 2.31E-5
    states[66] = 200.0
    constants[530] = 800.0
    constants[531] = 10.0
    constants[532] = 10.0
    constants[533] = 4.0
    states[67] = 0.200
    constants[534] = 2000.0
    constants[535] = 6.4
    constants[536] = 0.0
    constants[537] = 4.0
    constants[538] = 250.0
    constants[539] = 0.0
    constants[540] = 750.0
    constants[541] = 36.0
    constants[542] = 300.0
    states[68] = 0.200
    constants[543] = 1500.0
    constants[544] = 4.0
    constants[545] = 0.85
    constants[546] = 0.35
    states[69] = 0.300
    constants[547] = 0.1
    constants[548] = 0.5
    constants[549] = 3.0
    constants[550] = 3.0
    constants[551] = 4.5
    constants[552] = 1.0
    constants[553] = 3.0
    constants[554] = 0.3
    constants[555] = 18.5
    constants[556] = 100.0
    constants[557] = 200.0
    constants[558] = 20.0
    constants[559] = 1.0
    constants[560] = 0.01
    constants[561] = 100.0
    constants[562] = 5400.0
    constants[563] = 145E3
    constants[564] = 50.0
    constants[565] = 0.074
    constants[566] = 0.013
    constants[567] = -0.20
    constants[568] = -85.0
    constants[569] = 310.16
    constants[570] = 8.314E-3
    constants[571] = 0.09649
    constants[572] = 1.8E3
    constants[573] = 13.5
    constants[574] = 140.0E3
    states[70] = 1.01E4
    constants[575] = 0.10
    constants[576] = 3.0
    constants[577] = 0.0
    constants[578] = 0.12
    constants[579] = 160.0
    constants[580] = 675.0
    constants[581] = 1.0
    constants[582] = 187.5
    constants[583] = 1.0E4
    constants[584] = 4.0
    constants[585] = 10.0
    constants[586] = 1.0E5
    constants[587] = 6E-4
    constants[588] = 3.57
    constants[589] = 2.7E-5
    constants[590] = 2.31E-5
    states[71] = 200.0
    constants[591] = 800.0
    constants[592] = 10.0
    constants[593] = 10.0
    constants[594] = 4.0
    states[72] = 0.200
    constants[595] = 2000.0
    constants[596] = 6.4
    constants[597] = 0.0
    constants[598] = 4.0
    constants[599] = 250.0
    constants[600] = 0.0
    constants[601] = 750.0
    constants[602] = 36.0
    constants[603] = 300.0
    states[73] = 0.200
    constants[604] = 1500.0
    constants[605] = 4.0
    constants[606] = 0.85
    constants[607] = 0.35
    states[74] = 0.300
    constants[608] = 0.1
    constants[609] = 0.5
    constants[610] = 3.0
    constants[611] = 3.0
    constants[612] = 4.5
    constants[613] = 1.0
    constants[614] = 3.0
    constants[615] = 0.3
    constants[616] = 18.5
    constants[617] = 100.0
    constants[618] = 200.0
    constants[619] = 20.0
    constants[620] = 1.0
    constants[621] = 0.01
    constants[622] = 100.0
    constants[623] = 5400.0
    constants[624] = 145E3
    constants[625] = 50.0
    constants[626] = 0.074
    constants[627] = 0.013
    constants[628] = -0.20
    constants[629] = -85.0
    constants[630] = 310.16
    constants[631] = 8.314E-3
    constants[632] = 0.09649
    constants[633] = 1.8E3
    constants[634] = 13.5
    constants[635] = 140.0E3
    states[75] = 1.01E4
    constants[636] = 0.10
    constants[637] = 3.0
    constants[638] = 0.0
    constants[639] = 0.12
    constants[640] = 160.0
    constants[641] = 675.0
    constants[642] = 1.0
    constants[643] = 187.5
    constants[644] = 1.0E4
    constants[645] = 4.0
    constants[646] = 10.0
    constants[647] = 1.0E5
    constants[648] = 6E-4
    constants[649] = 3.57
    constants[650] = 2.7E-5
    constants[651] = 2.31E-5
    states[76] = 200.0
    constants[652] = 800.0
    constants[653] = 10.0
    constants[654] = 10.0
    constants[655] = 4.0
    states[77] = 0.200
    constants[656] = 2000.0
    constants[657] = 6.4
    constants[658] = 0.0
    constants[659] = 4.0
    constants[660] = 250.0
    constants[661] = 0.0
    constants[662] = 750.0
    constants[663] = 36.0
    constants[664] = 300.0
    states[78] = 0.200
    constants[665] = 1500.0
    constants[666] = 4.0
    constants[667] = 0.85
    constants[668] = 0.35
    states[79] = 0.300
    constants[669] = 0.1
    constants[670] = 0.5
    constants[671] = 3.0
    constants[672] = 3.0
    constants[673] = 4.5
    constants[674] = 1.0
    constants[675] = 3.0
    constants[676] = 0.3
    constants[677] = 18.5
    constants[678] = 100.0
    constants[679] = 200.0
    constants[680] = 20.0
    constants[681] = 1.0
    constants[682] = 0.01
    constants[683] = 100.0
    constants[684] = 5400.0
    constants[685] = 145E3
    constants[686] = 50.0
    constants[687] = constants[4]
    constants[688] = ((constants[52]*constants[51])/constants[53])*log(constants[55]/constants[56])
    constants[689] = ((constants[52]*constants[51])/constants[53])*log(constants[57]/constants[58])
    constants[690] = constants[130]/constants[129]
    constants[691] = constants[71]+(constants[72]-constants[71])*((1.00000-1.00000)/(constants[73]-1.00000))
    constants[692] = constants[71]+(constants[72]-constants[71])*((2.00000-1.00000)/(constants[73]-1.00000))
    constants[693] = constants[71]+(constants[72]-constants[71])*((3.00000-1.00000)/(constants[73]-1.00000))
    constants[694] = constants[71]+(constants[72]-constants[71])*((4.00000-1.00000)/(constants[73]-1.00000))
    constants[695] = constants[71]+(constants[72]-constants[71])*((5.00000-1.00000)/(constants[73]-1.00000))
    constants[696] = constants[71]+(constants[72]-constants[71])*((6.00000-1.00000)/(constants[73]-1.00000))
    constants[697] = constants[71]+(constants[72]-constants[71])*((7.00000-1.00000)/(constants[73]-1.00000))
    constants[698] = constants[71]+(constants[72]-constants[71])*((8.00000-1.00000)/(constants[73]-1.00000))
    constants[699] = constants[71]+(constants[72]-constants[71])*((9.00000-1.00000)/(constants[73]-1.00000))
    constants[700] = constants[71]+(constants[72]-constants[71])*((10.0000-1.00000)/(constants[73]-1.00000))
    constants[701] = constants[118]
    constants[702] = constants[179]
    constants[703] = constants[240]
    constants[704] = constants[301]
    constants[705] = constants[362]
    constants[706] = constants[423]
    constants[707] = constants[484]
    constants[708] = constants[545]
    constants[709] = constants[606]
    constants[710] = constants[667]
    constants[711] = constants[131]/constants[129]
    constants[712] = constants[130]/constants[132]
    constants[713] = constants[131]/constants[132]
    constants[714] = constants[129]/constants[132]
    constants[715] = constants[137]/constants[73]
    constants[716] = constants[191]/constants[190]
    constants[717] = constants[192]/constants[190]
    constants[718] = constants[191]/constants[193]
    constants[719] = constants[192]/constants[193]
    constants[720] = constants[190]/constants[193]
    constants[721] = constants[198]/constants[73]
    constants[722] = constants[252]/constants[251]
    constants[723] = constants[253]/constants[251]
    constants[724] = constants[252]/constants[254]
    constants[725] = constants[253]/constants[254]
    constants[726] = constants[251]/constants[254]
    constants[727] = constants[259]/constants[73]
    constants[728] = constants[313]/constants[312]
    constants[729] = constants[314]/constants[312]
    constants[730] = constants[313]/constants[315]
    constants[731] = constants[314]/constants[315]
    constants[732] = constants[312]/constants[315]
    constants[733] = constants[320]/constants[73]
    constants[734] = constants[374]/constants[373]
    constants[735] = constants[375]/constants[373]
    constants[736] = constants[374]/constants[376]
    constants[737] = constants[375]/constants[376]
    constants[738] = constants[373]/constants[376]
    constants[739] = constants[381]/constants[73]
    constants[740] = constants[435]/constants[434]
    constants[741] = constants[436]/constants[434]
    constants[742] = constants[435]/constants[437]
    constants[743] = constants[436]/constants[437]
    constants[744] = constants[434]/constants[437]
    constants[745] = constants[442]/constants[73]
    constants[746] = constants[496]/constants[495]
    constants[747] = constants[497]/constants[495]
    constants[748] = constants[496]/constants[498]
    constants[749] = constants[497]/constants[498]
    constants[750] = constants[495]/constants[498]
    constants[751] = constants[503]/constants[73]
    constants[752] = constants[557]/constants[556]
    constants[753] = constants[558]/constants[556]
    constants[754] = constants[557]/constants[559]
    constants[755] = constants[558]/constants[559]
    constants[756] = constants[556]/constants[559]
    constants[757] = constants[564]/constants[73]
    constants[758] = constants[618]/constants[617]
    constants[759] = constants[619]/constants[617]
    constants[760] = constants[618]/constants[620]
    constants[761] = constants[619]/constants[620]
    constants[762] = constants[617]/constants[620]
    constants[763] = constants[625]/constants[73]
    constants[764] = constants[679]/constants[678]
    constants[765] = constants[680]/constants[678]
    constants[766] = constants[679]/constants[681]
    constants[767] = constants[680]/constants[681]
    constants[768] = constants[678]/constants[681]
    constants[769] = constants[686]/constants[73]
    return (states, constants)

def computeRates(voi, states, constants):
    rates = [0.0] * sizeStates; algebraic = [0.0] * sizeAlgebraic
    rates[0] = constants[2]*states[2]*states[3]*(1.00000-states[0])-constants[3]*states[0]
    algebraic[0] = 1.00000/(1.00000+exp(constants[5]*(states[1]-constants[6])))
    rates[2] = (algebraic[0]-states[2])/constants[687]
    algebraic[9] = constants[116]/(1.00000+power(constants[119]/states[10], constants[117]))
    rates[34] = constants[701]*(1.00000-states[34])-algebraic[9]*states[34]
    algebraic[10] = constants[177]/(1.00000+power(constants[180]/states[11], constants[178]))
    rates[39] = constants[702]*(1.00000-states[39])-algebraic[10]*states[39]
    algebraic[11] = constants[238]/(1.00000+power(constants[241]/states[12], constants[239]))
    rates[44] = constants[703]*(1.00000-states[44])-algebraic[11]*states[44]
    algebraic[12] = constants[299]/(1.00000+power(constants[302]/states[13], constants[300]))
    rates[49] = constants[704]*(1.00000-states[49])-algebraic[12]*states[49]
    algebraic[13] = constants[360]/(1.00000+power(constants[363]/states[14], constants[361]))
    rates[54] = constants[705]*(1.00000-states[54])-algebraic[13]*states[54]
    algebraic[14] = constants[421]/(1.00000+power(constants[424]/states[15], constants[422]))
    rates[59] = constants[706]*(1.00000-states[59])-algebraic[14]*states[59]
    algebraic[15] = constants[482]/(1.00000+power(constants[485]/states[16], constants[483]))
    rates[64] = constants[707]*(1.00000-states[64])-algebraic[15]*states[64]
    algebraic[16] = constants[543]/(1.00000+power(constants[546]/states[17], constants[544]))
    rates[69] = constants[708]*(1.00000-states[69])-algebraic[16]*states[69]
    algebraic[17] = constants[604]/(1.00000+power(constants[607]/states[18], constants[605]))
    rates[74] = constants[709]*(1.00000-states[74])-algebraic[17]*states[74]
    algebraic[18] = constants[665]/(1.00000+power(constants[668]/states[19], constants[666]))
    rates[79] = constants[710]*(1.00000-states[79])-algebraic[18]*states[79]
    algebraic[1] = 1.00000/(1.00000+exp(constants[11]*(states[1]-constants[12])))
    algebraic[19] = constants[7]+(constants[8]-constants[7])/(1.00000+exp(constants[9]*(states[1]-constants[10])))
    rates[3] = (algebraic[1]-states[3])/algebraic[19]
    algebraic[3] = constants[23]*(constants[24]/(1.00000+exp(constants[25]*(states[1]-constants[26])))+(1.00000-constants[24]))
    algebraic[21] = constants[23]*(constants[24]-constants[24]/(1.00000+exp(constants[25]*(states[1]-constants[26]))))
    rates[6] = algebraic[3]*(1.00000-states[6])-algebraic[21]*states[6]
    algebraic[4] = constants[28]*(constants[29]/(1.00000+exp(constants[30]*(states[1]-constants[31])))+(1.00000-constants[29]))
    algebraic[22] = constants[28]*(constants[29]-constants[29]/(1.00000+exp(constants[30]*(states[1]-constants[31]))))
    rates[7] = algebraic[4]*(1.00000-states[7])-algebraic[22]*states[7]
    algebraic[2] = constants[16]+(constants[17]-constants[16])/(1.00000+exp(constants[18]*(states[1]-constants[19])))
    algebraic[20] = algebraic[2]*(constants[20]/(1.00000+exp(constants[21]*(states[1]-constants[22])))+(1.00000-constants[20]))
    algebraic[26] = algebraic[2]*(constants[20]-constants[20]/(1.00000+exp(constants[21]*(states[1]-constants[22]))))
    rates[5] = algebraic[20]*(1.00000-states[5])-algebraic[26]*states[5]
    algebraic[5] = constants[34]+(constants[35]-constants[34])/(1.00000+exp(constants[36]*(states[1]-constants[37])))
    algebraic[23] = algebraic[5]*(constants[38]/(1.00000+exp(constants[39]*(states[1]-constants[40])))+(1.00000-constants[38]))
    algebraic[27] = algebraic[5]*(constants[38]-constants[38]/(1.00000+exp(constants[39]*(states[1]-constants[40]))))
    rates[8] = algebraic[23]*(1.00000-states[8])-algebraic[27]*states[8]
    algebraic[6] = constants[41]+(constants[42]-constants[41])/(1.00000+exp(constants[43]*(states[1]-constants[44])))
    algebraic[24] = algebraic[6]*(constants[45]/(1.00000+exp(constants[46]*(states[1]-constants[47])))+(1.00000-constants[45]))
    algebraic[28] = algebraic[6]*(constants[45]-constants[45]/(1.00000+exp(constants[46]*(states[1]-constants[47]))))
    rates[9] = algebraic[24]*(1.00000-states[9])-algebraic[28]*states[9]
    algebraic[7] = constants[0]*states[0]*(states[1]-constants[1])
    algebraic[25] = constants[13]*(states[4]/(constants[14]+states[4]))
    algebraic[45] = constants[74]*(constants[75]-states[4])
    algebraic[35] = constants[61]*(states[4]-states[10])
    algebraic[36] = constants[62]*(states[4]-states[11])
    algebraic[37] = constants[63]*(states[4]-states[12])
    algebraic[38] = constants[64]*(states[4]-states[13])
    algebraic[39] = constants[65]*(states[4]-states[14])
    algebraic[40] = constants[66]*(states[4]-states[15])
    algebraic[41] = constants[67]*(states[4]-states[16])
    algebraic[42] = constants[68]*(states[4]-states[17])
    algebraic[43] = constants[69]*(states[4]-states[18])
    algebraic[44] = constants[70]*(states[4]-states[19])
    rates[4] = algebraic[45]-(constants[59]*algebraic[35]+constants[59]*algebraic[36]+constants[59]*algebraic[37]+constants[59]*algebraic[38]+constants[59]*algebraic[39]+constants[59]*algebraic[40]+constants[59]*algebraic[41]+constants[59]*algebraic[42]+constants[59]*algebraic[43]+constants[59]*algebraic[44]+(constants[60]/2.00000)*(algebraic[7]+algebraic[25]))
    algebraic[59] = ((constants[82]*constants[81])/constants[83])*log(constants[86]/states[30])
    algebraic[60] = constants[85]*(states[1]-algebraic[59])
    algebraic[68] = constants[94]*((power(states[30], constants[96]))/(power(constants[95], constants[96])+power(states[30], constants[96])))*(constants[97]-states[1])
    algebraic[63] = constants[91]*((power(constants[90], constants[88]))/(power(constants[90], constants[88])+power(states[20], constants[88])))
    algebraic[64] = algebraic[63]*(states[1]-constants[89])
    algebraic[70] = constants[715]*(algebraic[64]+algebraic[60]+algebraic[68])
    rates[30] = -(constants[128]/(1.00000*constants[715]))*algebraic[70]
    algebraic[46] = constants[691]*(states[10]-states[20])
    algebraic[56] = (constants[77]*exp(constants[78]*states[1]))/(1.00000+exp(constants[79]*(states[1]-constants[80])))
    algebraic[57] = ((constants[82]*constants[81])/(2.00000*constants[83]))*log(constants[84]/states[20])
    algebraic[58] = algebraic[56]*(states[1]-algebraic[57])
    algebraic[61] = constants[87]*((power(constants[90], constants[88]))/(power(constants[90], constants[88])+power(states[20], constants[88])))
    algebraic[62] = algebraic[61]*(states[1]-constants[89])
    algebraic[65] = constants[92]*((power(states[20], 2.00000))/(power(constants[93], 2.00000)+power(states[20], 2.00000)))
    algebraic[66] = constants[715]*(algebraic[58]+algebraic[62]+algebraic[65])
    algebraic[67] = (constants[98]*(states[20]-constants[99]*states[31]))/(1.00000+constants[100]*states[20]+constants[101]*states[31]+constants[102]*states[20]*states[31])
    algebraic[74] = constants[126]*(states[32]/(states[32]+constants[127]))
    rates[20] = (algebraic[46]+constants[690]*algebraic[74])-((constants[128]/(constants[715]*2.00000))*algebraic[66]+constants[711]*algebraic[67])
    algebraic[69] = (power(constants[105], constants[106]))/(power(constants[105], constants[106])+power(states[32], constants[106]))
    algebraic[71] = constants[103]*((power(states[10], 2.00000))/(power(constants[104], 2.00000)+power(states[10], 2.00000)))*algebraic[69]
    algebraic[77] = 1.00000/(1.00000+(constants[133]*constants[134])/(power(constants[133]+states[32], 2.00000)))
    rates[32] = algebraic[77]*(algebraic[71]-algebraic[74])
    algebraic[73] = (constants[109]*constants[114]+constants[111]*states[10])/(constants[114]+states[10])
    algebraic[76] = ((constants[108]+constants[112])*constants[115])/(constants[115]+states[10])
    algebraic[79] = constants[107]*(power((constants[125]*algebraic[73]*states[33])/(constants[125]*algebraic[73]+algebraic[76]), 4.00000))*(states[31]-states[10])
    rates[10] = (algebraic[35]+constants[713]*algebraic[79])-(constants[714]*algebraic[46]+constants[712]*algebraic[71])
    rates[31] = algebraic[67]-algebraic[79]
    algebraic[80] = (constants[110]*constants[115]+constants[113]*states[10])/(constants[115]+states[10])
    algebraic[82] = (constants[124]*states[34])/((1.00000+power(constants[120]/states[10], constants[122]))*(1.00000+power(states[10]/constants[121], constants[123])))
    rates[33] = algebraic[82]*(1.00000-states[33])-((constants[125]*algebraic[73]*algebraic[80])/(constants[125]*algebraic[73]+algebraic[76]))*states[33]
    algebraic[83] = ((constants[143]*constants[142])/constants[144])*log(constants[147]/states[35])
    algebraic[84] = constants[146]*(states[1]-algebraic[83])
    algebraic[92] = constants[155]*((power(states[35], constants[157]))/(power(constants[156], constants[157])+power(states[35], constants[157])))*(constants[158]-states[1])
    algebraic[87] = constants[152]*((power(constants[151], constants[149]))/(power(constants[151], constants[149])+power(states[21], constants[149])))
    algebraic[88] = algebraic[87]*(states[1]-constants[150])
    algebraic[94] = constants[721]*(algebraic[88]+algebraic[84]+algebraic[92])
    rates[35] = -(constants[189]/(1.00000*constants[721]))*algebraic[94]
    algebraic[47] = constants[692]*(states[11]-states[21])
    algebraic[75] = (constants[138]*exp(constants[139]*states[1]))/(1.00000+exp(constants[140]*(states[1]-constants[141])))
    algebraic[78] = ((constants[143]*constants[142])/(2.00000*constants[144]))*log(constants[145]/states[21])
    algebraic[81] = algebraic[75]*(states[1]-algebraic[78])
    algebraic[85] = constants[148]*((power(constants[151], constants[149]))/(power(constants[151], constants[149])+power(states[21], constants[149])))
    algebraic[86] = algebraic[85]*(states[1]-constants[150])
    algebraic[89] = constants[153]*((power(states[21], 2.00000))/(power(constants[154], 2.00000)+power(states[21], 2.00000)))
    algebraic[90] = constants[721]*(algebraic[81]+algebraic[86]+algebraic[89])
    algebraic[91] = (constants[159]*(states[21]-constants[160]*states[36]))/(1.00000+constants[161]*states[21]+constants[162]*states[36]+constants[163]*states[21]*states[36])
    algebraic[98] = constants[187]*(states[37]/(states[37]+constants[188]))
    rates[21] = (algebraic[47]+constants[716]*algebraic[98])-((constants[189]/(constants[721]*2.00000))*algebraic[90]+constants[717]*algebraic[91])
    algebraic[93] = (power(constants[166], constants[167]))/(power(constants[166], constants[167])+power(states[37], constants[167]))
    algebraic[95] = constants[164]*((power(states[11], 2.00000))/(power(constants[165], 2.00000)+power(states[11], 2.00000)))*algebraic[93]
    algebraic[101] = 1.00000/(1.00000+(constants[194]*constants[195])/(power(constants[194]+states[37], 2.00000)))
    rates[37] = algebraic[101]*(algebraic[95]-algebraic[98])
    algebraic[97] = (constants[170]*constants[175]+constants[172]*states[11])/(constants[175]+states[11])
    algebraic[100] = ((constants[169]+constants[173])*constants[176])/(constants[176]+states[11])
    algebraic[103] = constants[168]*(power((constants[186]*algebraic[97]*states[38])/(constants[186]*algebraic[97]+algebraic[100]), 4.00000))*(states[36]-states[11])
    rates[11] = (algebraic[36]+constants[719]*algebraic[103])-(constants[720]*algebraic[47]+constants[718]*algebraic[95])
    rates[36] = algebraic[91]-algebraic[103]
    algebraic[104] = (constants[171]*constants[176]+constants[174]*states[11])/(constants[176]+states[11])
    algebraic[106] = (constants[185]*states[39])/((1.00000+power(constants[181]/states[11], constants[183]))*(1.00000+power(states[11]/constants[182], constants[184])))
    rates[38] = algebraic[106]*(1.00000-states[38])-((constants[186]*algebraic[97]*algebraic[104])/(constants[186]*algebraic[97]+algebraic[100]))*states[38]
    algebraic[107] = ((constants[204]*constants[203])/constants[205])*log(constants[208]/states[40])
    algebraic[108] = constants[207]*(states[1]-algebraic[107])
    algebraic[116] = constants[216]*((power(states[40], constants[218]))/(power(constants[217], constants[218])+power(states[40], constants[218])))*(constants[219]-states[1])
    algebraic[111] = constants[213]*((power(constants[212], constants[210]))/(power(constants[212], constants[210])+power(states[22], constants[210])))
    algebraic[112] = algebraic[111]*(states[1]-constants[211])
    algebraic[118] = constants[727]*(algebraic[112]+algebraic[108]+algebraic[116])
    rates[40] = -(constants[250]/(1.00000*constants[727]))*algebraic[118]
    algebraic[48] = constants[693]*(states[12]-states[22])
    algebraic[99] = (constants[199]*exp(constants[200]*states[1]))/(1.00000+exp(constants[201]*(states[1]-constants[202])))
    algebraic[102] = ((constants[204]*constants[203])/(2.00000*constants[205]))*log(constants[206]/states[22])
    algebraic[105] = algebraic[99]*(states[1]-algebraic[102])
    algebraic[109] = constants[209]*((power(constants[212], constants[210]))/(power(constants[212], constants[210])+power(states[22], constants[210])))
    algebraic[110] = algebraic[109]*(states[1]-constants[211])
    algebraic[113] = constants[214]*((power(states[22], 2.00000))/(power(constants[215], 2.00000)+power(states[22], 2.00000)))
    algebraic[114] = constants[727]*(algebraic[105]+algebraic[110]+algebraic[113])
    algebraic[115] = (constants[220]*(states[22]-constants[221]*states[41]))/(1.00000+constants[222]*states[22]+constants[223]*states[41]+constants[224]*states[22]*states[41])
    algebraic[122] = constants[248]*(states[42]/(states[42]+constants[249]))
    rates[22] = (algebraic[48]+constants[722]*algebraic[122])-((constants[250]/(constants[727]*2.00000))*algebraic[114]+constants[723]*algebraic[115])
    algebraic[117] = (power(constants[227], constants[228]))/(power(constants[227], constants[228])+power(states[42], constants[228]))
    algebraic[119] = constants[225]*((power(states[12], 2.00000))/(power(constants[226], 2.00000)+power(states[12], 2.00000)))*algebraic[117]
    algebraic[125] = 1.00000/(1.00000+(constants[255]*constants[256])/(power(constants[255]+states[42], 2.00000)))
    rates[42] = algebraic[125]*(algebraic[119]-algebraic[122])
    algebraic[121] = (constants[231]*constants[236]+constants[233]*states[12])/(constants[236]+states[12])
    algebraic[124] = ((constants[230]+constants[234])*constants[237])/(constants[237]+states[12])
    algebraic[127] = constants[229]*(power((constants[247]*algebraic[121]*states[43])/(constants[247]*algebraic[121]+algebraic[124]), 4.00000))*(states[41]-states[12])
    rates[12] = (algebraic[37]+constants[725]*algebraic[127])-(constants[726]*algebraic[48]+constants[724]*algebraic[119])
    rates[41] = algebraic[115]-algebraic[127]
    algebraic[128] = (constants[232]*constants[237]+constants[235]*states[12])/(constants[237]+states[12])
    algebraic[130] = (constants[246]*states[44])/((1.00000+power(constants[242]/states[12], constants[244]))*(1.00000+power(states[12]/constants[243], constants[245])))
    rates[43] = algebraic[130]*(1.00000-states[43])-((constants[247]*algebraic[121]*algebraic[128])/(constants[247]*algebraic[121]+algebraic[124]))*states[43]
    algebraic[131] = ((constants[265]*constants[264])/constants[266])*log(constants[269]/states[45])
    algebraic[132] = constants[268]*(states[1]-algebraic[131])
    algebraic[140] = constants[277]*((power(states[45], constants[279]))/(power(constants[278], constants[279])+power(states[45], constants[279])))*(constants[280]-states[1])
    algebraic[135] = constants[274]*((power(constants[273], constants[271]))/(power(constants[273], constants[271])+power(states[23], constants[271])))
    algebraic[136] = algebraic[135]*(states[1]-constants[272])
    algebraic[142] = constants[733]*(algebraic[136]+algebraic[132]+algebraic[140])
    rates[45] = -(constants[311]/(1.00000*constants[733]))*algebraic[142]
    algebraic[49] = constants[694]*(states[13]-states[23])
    algebraic[123] = (constants[260]*exp(constants[261]*states[1]))/(1.00000+exp(constants[262]*(states[1]-constants[263])))
    algebraic[126] = ((constants[265]*constants[264])/(2.00000*constants[266]))*log(constants[267]/states[23])
    algebraic[129] = algebraic[123]*(states[1]-algebraic[126])
    algebraic[133] = constants[270]*((power(constants[273], constants[271]))/(power(constants[273], constants[271])+power(states[23], constants[271])))
    algebraic[134] = algebraic[133]*(states[1]-constants[272])
    algebraic[137] = constants[275]*((power(states[23], 2.00000))/(power(constants[276], 2.00000)+power(states[23], 2.00000)))
    algebraic[138] = constants[733]*(algebraic[129]+algebraic[134]+algebraic[137])
    algebraic[139] = (constants[281]*(states[23]-constants[282]*states[46]))/(1.00000+constants[283]*states[23]+constants[284]*states[46]+constants[285]*states[23]*states[46])
    algebraic[146] = constants[309]*(states[47]/(states[47]+constants[310]))
    rates[23] = (algebraic[49]+constants[728]*algebraic[146])-((constants[311]/(constants[733]*2.00000))*algebraic[138]+constants[729]*algebraic[139])
    algebraic[141] = (power(constants[288], constants[289]))/(power(constants[288], constants[289])+power(states[47], constants[289]))
    algebraic[143] = constants[286]*((power(states[13], 2.00000))/(power(constants[287], 2.00000)+power(states[13], 2.00000)))*algebraic[141]
    algebraic[149] = 1.00000/(1.00000+(constants[316]*constants[317])/(power(constants[316]+states[47], 2.00000)))
    rates[47] = algebraic[149]*(algebraic[143]-algebraic[146])
    algebraic[145] = (constants[292]*constants[297]+constants[294]*states[13])/(constants[297]+states[13])
    algebraic[148] = ((constants[291]+constants[295])*constants[298])/(constants[298]+states[13])
    algebraic[151] = constants[290]*(power((constants[308]*algebraic[145]*states[48])/(constants[308]*algebraic[145]+algebraic[148]), 4.00000))*(states[46]-states[13])
    rates[13] = (algebraic[38]+constants[731]*algebraic[151])-(constants[732]*algebraic[49]+constants[730]*algebraic[143])
    rates[46] = algebraic[139]-algebraic[151]
    algebraic[152] = (constants[293]*constants[298]+constants[296]*states[13])/(constants[298]+states[13])
    algebraic[154] = (constants[307]*states[49])/((1.00000+power(constants[303]/states[13], constants[305]))*(1.00000+power(states[13]/constants[304], constants[306])))
    rates[48] = algebraic[154]*(1.00000-states[48])-((constants[308]*algebraic[145]*algebraic[152])/(constants[308]*algebraic[145]+algebraic[148]))*states[48]
    algebraic[155] = ((constants[326]*constants[325])/constants[327])*log(constants[330]/states[50])
    algebraic[156] = constants[329]*(states[1]-algebraic[155])
    algebraic[164] = constants[338]*((power(states[50], constants[340]))/(power(constants[339], constants[340])+power(states[50], constants[340])))*(constants[341]-states[1])
    algebraic[159] = constants[335]*((power(constants[334], constants[332]))/(power(constants[334], constants[332])+power(states[24], constants[332])))
    algebraic[160] = algebraic[159]*(states[1]-constants[333])
    algebraic[166] = constants[739]*(algebraic[160]+algebraic[156]+algebraic[164])
    rates[50] = -(constants[372]/(1.00000*constants[739]))*algebraic[166]
    algebraic[50] = constants[695]*(states[14]-states[24])
    algebraic[147] = (constants[321]*exp(constants[322]*states[1]))/(1.00000+exp(constants[323]*(states[1]-constants[324])))
    algebraic[150] = ((constants[326]*constants[325])/(2.00000*constants[327]))*log(constants[328]/states[24])
    algebraic[153] = algebraic[147]*(states[1]-algebraic[150])
    algebraic[157] = constants[331]*((power(constants[334], constants[332]))/(power(constants[334], constants[332])+power(states[24], constants[332])))
    algebraic[158] = algebraic[157]*(states[1]-constants[333])
    algebraic[161] = constants[336]*((power(states[24], 2.00000))/(power(constants[337], 2.00000)+power(states[24], 2.00000)))
    algebraic[162] = constants[739]*(algebraic[153]+algebraic[158]+algebraic[161])
    algebraic[163] = (constants[342]*(states[24]-constants[343]*states[51]))/(1.00000+constants[344]*states[24]+constants[345]*states[51]+constants[346]*states[24]*states[51])
    algebraic[170] = constants[370]*(states[52]/(states[52]+constants[371]))
    rates[24] = (algebraic[50]+constants[734]*algebraic[170])-((constants[372]/(constants[739]*2.00000))*algebraic[162]+constants[735]*algebraic[163])
    algebraic[165] = (power(constants[349], constants[350]))/(power(constants[349], constants[350])+power(states[52], constants[350]))
    algebraic[167] = constants[347]*((power(states[14], 2.00000))/(power(constants[348], 2.00000)+power(states[14], 2.00000)))*algebraic[165]
    algebraic[173] = 1.00000/(1.00000+(constants[377]*constants[378])/(power(constants[377]+states[52], 2.00000)))
    rates[52] = algebraic[173]*(algebraic[167]-algebraic[170])
    algebraic[169] = (constants[353]*constants[358]+constants[355]*states[14])/(constants[358]+states[14])
    algebraic[172] = ((constants[352]+constants[356])*constants[359])/(constants[359]+states[14])
    algebraic[175] = constants[351]*(power((constants[369]*algebraic[169]*states[53])/(constants[369]*algebraic[169]+algebraic[172]), 4.00000))*(states[51]-states[14])
    rates[14] = (algebraic[39]+constants[737]*algebraic[175])-(constants[738]*algebraic[50]+constants[736]*algebraic[167])
    rates[51] = algebraic[163]-algebraic[175]
    algebraic[176] = (constants[354]*constants[359]+constants[357]*states[14])/(constants[359]+states[14])
    algebraic[178] = (constants[368]*states[54])/((1.00000+power(constants[364]/states[14], constants[366]))*(1.00000+power(states[14]/constants[365], constants[367])))
    rates[53] = algebraic[178]*(1.00000-states[53])-((constants[369]*algebraic[169]*algebraic[176])/(constants[369]*algebraic[169]+algebraic[172]))*states[53]
    algebraic[179] = ((constants[387]*constants[386])/constants[388])*log(constants[391]/states[55])
    algebraic[180] = constants[390]*(states[1]-algebraic[179])
    algebraic[188] = constants[399]*((power(states[55], constants[401]))/(power(constants[400], constants[401])+power(states[55], constants[401])))*(constants[402]-states[1])
    algebraic[183] = constants[396]*((power(constants[395], constants[393]))/(power(constants[395], constants[393])+power(states[25], constants[393])))
    algebraic[184] = algebraic[183]*(states[1]-constants[394])
    algebraic[190] = constants[745]*(algebraic[184]+algebraic[180]+algebraic[188])
    rates[55] = -(constants[433]/(1.00000*constants[745]))*algebraic[190]
    algebraic[51] = constants[696]*(states[15]-states[25])
    algebraic[171] = (constants[382]*exp(constants[383]*states[1]))/(1.00000+exp(constants[384]*(states[1]-constants[385])))
    algebraic[174] = ((constants[387]*constants[386])/(2.00000*constants[388]))*log(constants[389]/states[25])
    algebraic[177] = algebraic[171]*(states[1]-algebraic[174])
    algebraic[181] = constants[392]*((power(constants[395], constants[393]))/(power(constants[395], constants[393])+power(states[25], constants[393])))
    algebraic[182] = algebraic[181]*(states[1]-constants[394])
    algebraic[185] = constants[397]*((power(states[25], 2.00000))/(power(constants[398], 2.00000)+power(states[25], 2.00000)))
    algebraic[186] = constants[745]*(algebraic[177]+algebraic[182]+algebraic[185])
    algebraic[187] = (constants[403]*(states[25]-constants[404]*states[56]))/(1.00000+constants[405]*states[25]+constants[406]*states[56]+constants[407]*states[25]*states[56])
    algebraic[194] = constants[431]*(states[57]/(states[57]+constants[432]))
    rates[25] = (algebraic[51]+constants[740]*algebraic[194])-((constants[433]/(constants[745]*2.00000))*algebraic[186]+constants[741]*algebraic[187])
    algebraic[189] = (power(constants[410], constants[411]))/(power(constants[410], constants[411])+power(states[57], constants[411]))
    algebraic[191] = constants[408]*((power(states[15], 2.00000))/(power(constants[409], 2.00000)+power(states[15], 2.00000)))*algebraic[189]
    algebraic[197] = 1.00000/(1.00000+(constants[438]*constants[439])/(power(constants[438]+states[57], 2.00000)))
    rates[57] = algebraic[197]*(algebraic[191]-algebraic[194])
    algebraic[193] = (constants[414]*constants[419]+constants[416]*states[15])/(constants[419]+states[15])
    algebraic[196] = ((constants[413]+constants[417])*constants[420])/(constants[420]+states[15])
    algebraic[199] = constants[412]*(power((constants[430]*algebraic[193]*states[58])/(constants[430]*algebraic[193]+algebraic[196]), 4.00000))*(states[56]-states[15])
    rates[15] = (algebraic[40]+constants[743]*algebraic[199])-(constants[744]*algebraic[51]+constants[742]*algebraic[191])
    rates[56] = algebraic[187]-algebraic[199]
    algebraic[200] = (constants[415]*constants[420]+constants[418]*states[15])/(constants[420]+states[15])
    algebraic[202] = (constants[429]*states[59])/((1.00000+power(constants[425]/states[15], constants[427]))*(1.00000+power(states[15]/constants[426], constants[428])))
    rates[58] = algebraic[202]*(1.00000-states[58])-((constants[430]*algebraic[193]*algebraic[200])/(constants[430]*algebraic[193]+algebraic[196]))*states[58]
    algebraic[203] = ((constants[448]*constants[447])/constants[449])*log(constants[452]/states[60])
    algebraic[204] = constants[451]*(states[1]-algebraic[203])
    algebraic[212] = constants[460]*((power(states[60], constants[462]))/(power(constants[461], constants[462])+power(states[60], constants[462])))*(constants[463]-states[1])
    algebraic[207] = constants[457]*((power(constants[456], constants[454]))/(power(constants[456], constants[454])+power(states[26], constants[454])))
    algebraic[208] = algebraic[207]*(states[1]-constants[455])
    algebraic[214] = constants[751]*(algebraic[208]+algebraic[204]+algebraic[212])
    rates[60] = -(constants[494]/(1.00000*constants[751]))*algebraic[214]
    algebraic[52] = constants[697]*(states[16]-states[26])
    algebraic[195] = (constants[443]*exp(constants[444]*states[1]))/(1.00000+exp(constants[445]*(states[1]-constants[446])))
    algebraic[198] = ((constants[448]*constants[447])/(2.00000*constants[449]))*log(constants[450]/states[26])
    algebraic[201] = algebraic[195]*(states[1]-algebraic[198])
    algebraic[205] = constants[453]*((power(constants[456], constants[454]))/(power(constants[456], constants[454])+power(states[26], constants[454])))
    algebraic[206] = algebraic[205]*(states[1]-constants[455])
    algebraic[209] = constants[458]*((power(states[26], 2.00000))/(power(constants[459], 2.00000)+power(states[26], 2.00000)))
    algebraic[210] = constants[751]*(algebraic[201]+algebraic[206]+algebraic[209])
    algebraic[211] = (constants[464]*(states[26]-constants[465]*states[61]))/(1.00000+constants[466]*states[26]+constants[467]*states[61]+constants[468]*states[26]*states[61])
    algebraic[218] = constants[492]*(states[62]/(states[62]+constants[493]))
    rates[26] = (algebraic[52]+constants[746]*algebraic[218])-((constants[494]/(constants[751]*2.00000))*algebraic[210]+constants[747]*algebraic[211])
    algebraic[213] = (power(constants[471], constants[472]))/(power(constants[471], constants[472])+power(states[62], constants[472]))
    algebraic[215] = constants[469]*((power(states[16], 2.00000))/(power(constants[470], 2.00000)+power(states[16], 2.00000)))*algebraic[213]
    algebraic[221] = 1.00000/(1.00000+(constants[499]*constants[500])/(power(constants[499]+states[62], 2.00000)))
    rates[62] = algebraic[221]*(algebraic[215]-algebraic[218])
    algebraic[217] = (constants[475]*constants[480]+constants[477]*states[16])/(constants[480]+states[16])
    algebraic[220] = ((constants[474]+constants[478])*constants[481])/(constants[481]+states[16])
    algebraic[223] = constants[473]*(power((constants[491]*algebraic[217]*states[63])/(constants[491]*algebraic[217]+algebraic[220]), 4.00000))*(states[61]-states[16])
    rates[16] = (algebraic[41]+constants[749]*algebraic[223])-(constants[750]*algebraic[52]+constants[748]*algebraic[215])
    rates[61] = algebraic[211]-algebraic[223]
    algebraic[224] = (constants[476]*constants[481]+constants[479]*states[16])/(constants[481]+states[16])
    algebraic[226] = (constants[490]*states[64])/((1.00000+power(constants[486]/states[16], constants[488]))*(1.00000+power(states[16]/constants[487], constants[489])))
    rates[63] = algebraic[226]*(1.00000-states[63])-((constants[491]*algebraic[217]*algebraic[224])/(constants[491]*algebraic[217]+algebraic[220]))*states[63]
    algebraic[227] = ((constants[509]*constants[508])/constants[510])*log(constants[513]/states[65])
    algebraic[228] = constants[512]*(states[1]-algebraic[227])
    algebraic[236] = constants[521]*((power(states[65], constants[523]))/(power(constants[522], constants[523])+power(states[65], constants[523])))*(constants[524]-states[1])
    algebraic[231] = constants[518]*((power(constants[517], constants[515]))/(power(constants[517], constants[515])+power(states[27], constants[515])))
    algebraic[232] = algebraic[231]*(states[1]-constants[516])
    algebraic[238] = constants[757]*(algebraic[232]+algebraic[228]+algebraic[236])
    rates[65] = -(constants[555]/(1.00000*constants[757]))*algebraic[238]
    algebraic[53] = constants[698]*(states[17]-states[27])
    algebraic[219] = (constants[504]*exp(constants[505]*states[1]))/(1.00000+exp(constants[506]*(states[1]-constants[507])))
    algebraic[222] = ((constants[509]*constants[508])/(2.00000*constants[510]))*log(constants[511]/states[27])
    algebraic[225] = algebraic[219]*(states[1]-algebraic[222])
    algebraic[229] = constants[514]*((power(constants[517], constants[515]))/(power(constants[517], constants[515])+power(states[27], constants[515])))
    algebraic[230] = algebraic[229]*(states[1]-constants[516])
    algebraic[233] = constants[519]*((power(states[27], 2.00000))/(power(constants[520], 2.00000)+power(states[27], 2.00000)))
    algebraic[234] = constants[757]*(algebraic[225]+algebraic[230]+algebraic[233])
    algebraic[235] = (constants[525]*(states[27]-constants[526]*states[66]))/(1.00000+constants[527]*states[27]+constants[528]*states[66]+constants[529]*states[27]*states[66])
    algebraic[242] = constants[553]*(states[67]/(states[67]+constants[554]))
    rates[27] = (algebraic[53]+constants[752]*algebraic[242])-((constants[555]/(constants[757]*2.00000))*algebraic[234]+constants[753]*algebraic[235])
    algebraic[237] = (power(constants[532], constants[533]))/(power(constants[532], constants[533])+power(states[67], constants[533]))
    algebraic[239] = constants[530]*((power(states[17], 2.00000))/(power(constants[531], 2.00000)+power(states[17], 2.00000)))*algebraic[237]
    algebraic[245] = 1.00000/(1.00000+(constants[560]*constants[561])/(power(constants[560]+states[67], 2.00000)))
    rates[67] = algebraic[245]*(algebraic[239]-algebraic[242])
    algebraic[241] = (constants[536]*constants[541]+constants[538]*states[17])/(constants[541]+states[17])
    algebraic[244] = ((constants[535]+constants[539])*constants[542])/(constants[542]+states[17])
    algebraic[247] = constants[534]*(power((constants[552]*algebraic[241]*states[68])/(constants[552]*algebraic[241]+algebraic[244]), 4.00000))*(states[66]-states[17])
    rates[17] = (algebraic[42]+constants[755]*algebraic[247])-(constants[756]*algebraic[53]+constants[754]*algebraic[239])
    rates[66] = algebraic[235]-algebraic[247]
    algebraic[248] = (constants[537]*constants[542]+constants[540]*states[17])/(constants[542]+states[17])
    algebraic[250] = (constants[551]*states[69])/((1.00000+power(constants[547]/states[17], constants[549]))*(1.00000+power(states[17]/constants[548], constants[550])))
    rates[68] = algebraic[250]*(1.00000-states[68])-((constants[552]*algebraic[241]*algebraic[248])/(constants[552]*algebraic[241]+algebraic[244]))*states[68]
    algebraic[251] = ((constants[570]*constants[569])/constants[571])*log(constants[574]/states[70])
    algebraic[252] = constants[573]*(states[1]-algebraic[251])
    algebraic[260] = constants[582]*((power(states[70], constants[584]))/(power(constants[583], constants[584])+power(states[70], constants[584])))*(constants[585]-states[1])
    algebraic[255] = constants[579]*((power(constants[578], constants[576]))/(power(constants[578], constants[576])+power(states[28], constants[576])))
    algebraic[256] = algebraic[255]*(states[1]-constants[577])
    algebraic[262] = constants[763]*(algebraic[256]+algebraic[252]+algebraic[260])
    rates[70] = -(constants[616]/(1.00000*constants[763]))*algebraic[262]
    algebraic[54] = constants[699]*(states[18]-states[28])
    algebraic[243] = (constants[565]*exp(constants[566]*states[1]))/(1.00000+exp(constants[567]*(states[1]-constants[568])))
    algebraic[246] = ((constants[570]*constants[569])/(2.00000*constants[571]))*log(constants[572]/states[28])
    algebraic[249] = algebraic[243]*(states[1]-algebraic[246])
    algebraic[253] = constants[575]*((power(constants[578], constants[576]))/(power(constants[578], constants[576])+power(states[28], constants[576])))
    algebraic[254] = algebraic[253]*(states[1]-constants[577])
    algebraic[257] = constants[580]*((power(states[28], 2.00000))/(power(constants[581], 2.00000)+power(states[28], 2.00000)))
    algebraic[258] = constants[763]*(algebraic[249]+algebraic[254]+algebraic[257])
    algebraic[259] = (constants[586]*(states[28]-constants[587]*states[71]))/(1.00000+constants[588]*states[28]+constants[589]*states[71]+constants[590]*states[28]*states[71])
    algebraic[266] = constants[614]*(states[72]/(states[72]+constants[615]))
    rates[28] = (algebraic[54]+constants[758]*algebraic[266])-((constants[616]/(constants[763]*2.00000))*algebraic[258]+constants[759]*algebraic[259])
    algebraic[261] = (power(constants[593], constants[594]))/(power(constants[593], constants[594])+power(states[72], constants[594]))
    algebraic[263] = constants[591]*((power(states[18], 2.00000))/(power(constants[592], 2.00000)+power(states[18], 2.00000)))*algebraic[261]
    algebraic[269] = 1.00000/(1.00000+(constants[621]*constants[622])/(power(constants[621]+states[72], 2.00000)))
    rates[72] = algebraic[269]*(algebraic[263]-algebraic[266])
    algebraic[265] = (constants[597]*constants[602]+constants[599]*states[18])/(constants[602]+states[18])
    algebraic[268] = ((constants[596]+constants[600])*constants[603])/(constants[603]+states[18])
    algebraic[271] = constants[595]*(power((constants[613]*algebraic[265]*states[73])/(constants[613]*algebraic[265]+algebraic[268]), 4.00000))*(states[71]-states[18])
    rates[18] = (algebraic[43]+constants[761]*algebraic[271])-(constants[762]*algebraic[54]+constants[760]*algebraic[263])
    rates[71] = algebraic[259]-algebraic[271]
    algebraic[272] = (constants[598]*constants[603]+constants[601]*states[18])/(constants[603]+states[18])
    algebraic[274] = (constants[612]*states[74])/((1.00000+power(constants[608]/states[18], constants[610]))*(1.00000+power(states[18]/constants[609], constants[611])))
    rates[73] = algebraic[274]*(1.00000-states[73])-((constants[613]*algebraic[265]*algebraic[272])/(constants[613]*algebraic[265]+algebraic[268]))*states[73]
    algebraic[275] = ((constants[631]*constants[630])/constants[632])*log(constants[635]/states[75])
    algebraic[276] = constants[634]*(states[1]-algebraic[275])
    algebraic[283] = constants[643]*((power(states[75], constants[645]))/(power(constants[644], constants[645])+power(states[75], constants[645])))*(constants[646]-states[1])
    algebraic[279] = constants[640]*((power(constants[639], constants[637]))/(power(constants[639], constants[637])+power(states[29], constants[637])))
    algebraic[280] = algebraic[279]*(states[1]-constants[638])
    algebraic[285] = constants[769]*(algebraic[280]+algebraic[276]+algebraic[283])
    rates[75] = -(constants[677]/(1.00000*constants[769]))*algebraic[285]
    algebraic[29] = constants[15]*states[5]*states[6]*(states[1]-constants[688])
    algebraic[30] = constants[27]*states[7]*(states[1]-constants[688])
    algebraic[31] = constants[32]*(states[1]-constants[688])
    algebraic[32] = constants[33]*states[8]*states[9]*(states[1]-constants[689])
    algebraic[33] = constants[48]*(states[1]-constants[49])
    algebraic[34] = algebraic[7]+algebraic[25]+algebraic[29]+algebraic[30]+algebraic[31]+algebraic[32]+algebraic[33]
    algebraic[72] = algebraic[66]+algebraic[70]
    algebraic[96] = algebraic[90]+algebraic[94]
    algebraic[120] = algebraic[114]+algebraic[118]
    algebraic[144] = algebraic[138]+algebraic[142]
    algebraic[168] = algebraic[162]+algebraic[166]
    algebraic[192] = algebraic[186]+algebraic[190]
    algebraic[216] = algebraic[210]+algebraic[214]
    algebraic[240] = algebraic[234]+algebraic[238]
    algebraic[264] = algebraic[258]+algebraic[262]
    algebraic[267] = (constants[626]*exp(constants[627]*states[1]))/(1.00000+exp(constants[628]*(states[1]-constants[629])))
    algebraic[270] = ((constants[631]*constants[630])/(2.00000*constants[632]))*log(constants[633]/states[29])
    algebraic[273] = algebraic[267]*(states[1]-algebraic[270])
    algebraic[277] = constants[636]*((power(constants[639], constants[637]))/(power(constants[639], constants[637])+power(states[29], constants[637])))
    algebraic[278] = algebraic[277]*(states[1]-constants[638])
    algebraic[281] = constants[641]*((power(states[29], 2.00000))/(power(constants[642], 2.00000)+power(states[29], 2.00000)))
    algebraic[282] = constants[769]*(algebraic[273]+algebraic[278]+algebraic[281])
    algebraic[287] = algebraic[282]+algebraic[285]
    rates[1] = -(1.00000/constants[50])*(algebraic[34]+algebraic[72]+algebraic[96]+algebraic[120]+algebraic[144]+algebraic[168]+algebraic[192]+algebraic[216]+algebraic[240]+algebraic[264]+algebraic[287])
    algebraic[55] = constants[700]*(states[19]-states[29])
    algebraic[284] = (constants[647]*(states[29]-constants[648]*states[76]))/(1.00000+constants[649]*states[29]+constants[650]*states[76]+constants[651]*states[29]*states[76])
    algebraic[290] = constants[675]*(states[77]/(states[77]+constants[676]))
    rates[29] = (algebraic[55]+constants[764]*algebraic[290])-((constants[677]/(constants[769]*2.00000))*algebraic[282]+constants[765]*algebraic[284])
    algebraic[286] = (power(constants[654], constants[655]))/(power(constants[654], constants[655])+power(states[77], constants[655]))
    algebraic[288] = constants[652]*((power(states[19], 2.00000))/(power(constants[653], 2.00000)+power(states[19], 2.00000)))*algebraic[286]
    algebraic[292] = 1.00000/(1.00000+(constants[682]*constants[683])/(power(constants[682]+states[77], 2.00000)))
    rates[77] = algebraic[292]*(algebraic[288]-algebraic[290])
    algebraic[289] = (constants[658]*constants[663]+constants[660]*states[19])/(constants[663]+states[19])
    algebraic[291] = ((constants[657]+constants[661])*constants[664])/(constants[664]+states[19])
    algebraic[293] = constants[656]*(power((constants[674]*algebraic[289]*states[78])/(constants[674]*algebraic[289]+algebraic[291]), 4.00000))*(states[76]-states[19])
    rates[19] = (algebraic[44]+constants[767]*algebraic[293])-(constants[768]*algebraic[55]+constants[766]*algebraic[288])
    rates[76] = algebraic[284]-algebraic[293]
    algebraic[294] = (constants[659]*constants[664]+constants[662]*states[19])/(constants[664]+states[19])
    algebraic[295] = (constants[673]*states[79])/((1.00000+power(constants[669]/states[19], constants[671]))*(1.00000+power(states[19]/constants[670], constants[672])))
    rates[78] = algebraic[295]*(1.00000-states[78])-((constants[674]*algebraic[289]*algebraic[294])/(constants[674]*algebraic[289]+algebraic[291]))*states[78]
    return(rates)

def computeAlgebraic(constants, states, voi):
    algebraic = array([[0.0] * len(voi)] * sizeAlgebraic)
    states = array(states)
    voi = array(voi)
    algebraic[0] = 1.00000/(1.00000+exp(constants[5]*(states[1]-constants[6])))
    algebraic[9] = constants[116]/(1.00000+power(constants[119]/states[10], constants[117]))
    algebraic[10] = constants[177]/(1.00000+power(constants[180]/states[11], constants[178]))
    algebraic[11] = constants[238]/(1.00000+power(constants[241]/states[12], constants[239]))
    algebraic[12] = constants[299]/(1.00000+power(constants[302]/states[13], constants[300]))
    algebraic[13] = constants[360]/(1.00000+power(constants[363]/states[14], constants[361]))
    algebraic[14] = constants[421]/(1.00000+power(constants[424]/states[15], constants[422]))
    algebraic[15] = constants[482]/(1.00000+power(constants[485]/states[16], constants[483]))
    algebraic[16] = constants[543]/(1.00000+power(constants[546]/states[17], constants[544]))
    algebraic[17] = constants[604]/(1.00000+power(constants[607]/states[18], constants[605]))
    algebraic[18] = constants[665]/(1.00000+power(constants[668]/states[19], constants[666]))
    algebraic[1] = 1.00000/(1.00000+exp(constants[11]*(states[1]-constants[12])))
    algebraic[19] = constants[7]+(constants[8]-constants[7])/(1.00000+exp(constants[9]*(states[1]-constants[10])))
    algebraic[3] = constants[23]*(constants[24]/(1.00000+exp(constants[25]*(states[1]-constants[26])))+(1.00000-constants[24]))
    algebraic[21] = constants[23]*(constants[24]-constants[24]/(1.00000+exp(constants[25]*(states[1]-constants[26]))))
    algebraic[4] = constants[28]*(constants[29]/(1.00000+exp(constants[30]*(states[1]-constants[31])))+(1.00000-constants[29]))
    algebraic[22] = constants[28]*(constants[29]-constants[29]/(1.00000+exp(constants[30]*(states[1]-constants[31]))))
    algebraic[2] = constants[16]+(constants[17]-constants[16])/(1.00000+exp(constants[18]*(states[1]-constants[19])))
    algebraic[20] = algebraic[2]*(constants[20]/(1.00000+exp(constants[21]*(states[1]-constants[22])))+(1.00000-constants[20]))
    algebraic[26] = algebraic[2]*(constants[20]-constants[20]/(1.00000+exp(constants[21]*(states[1]-constants[22]))))
    algebraic[5] = constants[34]+(constants[35]-constants[34])/(1.00000+exp(constants[36]*(states[1]-constants[37])))
    algebraic[23] = algebraic[5]*(constants[38]/(1.00000+exp(constants[39]*(states[1]-constants[40])))+(1.00000-constants[38]))
    algebraic[27] = algebraic[5]*(constants[38]-constants[38]/(1.00000+exp(constants[39]*(states[1]-constants[40]))))
    algebraic[6] = constants[41]+(constants[42]-constants[41])/(1.00000+exp(constants[43]*(states[1]-constants[44])))
    algebraic[24] = algebraic[6]*(constants[45]/(1.00000+exp(constants[46]*(states[1]-constants[47])))+(1.00000-constants[45]))
    algebraic[28] = algebraic[6]*(constants[45]-constants[45]/(1.00000+exp(constants[46]*(states[1]-constants[47]))))
    algebraic[7] = constants[0]*states[0]*(states[1]-constants[1])
    algebraic[25] = constants[13]*(states[4]/(constants[14]+states[4]))
    algebraic[45] = constants[74]*(constants[75]-states[4])
    algebraic[35] = constants[61]*(states[4]-states[10])
    algebraic[36] = constants[62]*(states[4]-states[11])
    algebraic[37] = constants[63]*(states[4]-states[12])
    algebraic[38] = constants[64]*(states[4]-states[13])
    algebraic[39] = constants[65]*(states[4]-states[14])
    algebraic[40] = constants[66]*(states[4]-states[15])
    algebraic[41] = constants[67]*(states[4]-states[16])
    algebraic[42] = constants[68]*(states[4]-states[17])
    algebraic[43] = constants[69]*(states[4]-states[18])
    algebraic[44] = constants[70]*(states[4]-states[19])
    algebraic[59] = ((constants[82]*constants[81])/constants[83])*log(constants[86]/states[30])
    algebraic[60] = constants[85]*(states[1]-algebraic[59])
    algebraic[68] = constants[94]*((power(states[30], constants[96]))/(power(constants[95], constants[96])+power(states[30], constants[96])))*(constants[97]-states[1])
    algebraic[63] = constants[91]*((power(constants[90], constants[88]))/(power(constants[90], constants[88])+power(states[20], constants[88])))
    algebraic[64] = algebraic[63]*(states[1]-constants[89])
    algebraic[70] = constants[715]*(algebraic[64]+algebraic[60]+algebraic[68])
    algebraic[46] = constants[691]*(states[10]-states[20])
    algebraic[56] = (constants[77]*exp(constants[78]*states[1]))/(1.00000+exp(constants[79]*(states[1]-constants[80])))
    algebraic[57] = ((constants[82]*constants[81])/(2.00000*constants[83]))*log(constants[84]/states[20])
    algebraic[58] = algebraic[56]*(states[1]-algebraic[57])
    algebraic[61] = constants[87]*((power(constants[90], constants[88]))/(power(constants[90], constants[88])+power(states[20], constants[88])))
    algebraic[62] = algebraic[61]*(states[1]-constants[89])
    algebraic[65] = constants[92]*((power(states[20], 2.00000))/(power(constants[93], 2.00000)+power(states[20], 2.00000)))
    algebraic[66] = constants[715]*(algebraic[58]+algebraic[62]+algebraic[65])
    algebraic[67] = (constants[98]*(states[20]-constants[99]*states[31]))/(1.00000+constants[100]*states[20]+constants[101]*states[31]+constants[102]*states[20]*states[31])
    algebraic[74] = constants[126]*(states[32]/(states[32]+constants[127]))
    algebraic[69] = (power(constants[105], constants[106]))/(power(constants[105], constants[106])+power(states[32], constants[106]))
    algebraic[71] = constants[103]*((power(states[10], 2.00000))/(power(constants[104], 2.00000)+power(states[10], 2.00000)))*algebraic[69]
    algebraic[77] = 1.00000/(1.00000+(constants[133]*constants[134])/(power(constants[133]+states[32], 2.00000)))
    algebraic[73] = (constants[109]*constants[114]+constants[111]*states[10])/(constants[114]+states[10])
    algebraic[76] = ((constants[108]+constants[112])*constants[115])/(constants[115]+states[10])
    algebraic[79] = constants[107]*(power((constants[125]*algebraic[73]*states[33])/(constants[125]*algebraic[73]+algebraic[76]), 4.00000))*(states[31]-states[10])
    algebraic[80] = (constants[110]*constants[115]+constants[113]*states[10])/(constants[115]+states[10])
    algebraic[82] = (constants[124]*states[34])/((1.00000+power(constants[120]/states[10], constants[122]))*(1.00000+power(states[10]/constants[121], constants[123])))
    algebraic[83] = ((constants[143]*constants[142])/constants[144])*log(constants[147]/states[35])
    algebraic[84] = constants[146]*(states[1]-algebraic[83])
    algebraic[92] = constants[155]*((power(states[35], constants[157]))/(power(constants[156], constants[157])+power(states[35], constants[157])))*(constants[158]-states[1])
    algebraic[87] = constants[152]*((power(constants[151], constants[149]))/(power(constants[151], constants[149])+power(states[21], constants[149])))
    algebraic[88] = algebraic[87]*(states[1]-constants[150])
    algebraic[94] = constants[721]*(algebraic[88]+algebraic[84]+algebraic[92])
    algebraic[47] = constants[692]*(states[11]-states[21])
    algebraic[75] = (constants[138]*exp(constants[139]*states[1]))/(1.00000+exp(constants[140]*(states[1]-constants[141])))
    algebraic[78] = ((constants[143]*constants[142])/(2.00000*constants[144]))*log(constants[145]/states[21])
    algebraic[81] = algebraic[75]*(states[1]-algebraic[78])
    algebraic[85] = constants[148]*((power(constants[151], constants[149]))/(power(constants[151], constants[149])+power(states[21], constants[149])))
    algebraic[86] = algebraic[85]*(states[1]-constants[150])
    algebraic[89] = constants[153]*((power(states[21], 2.00000))/(power(constants[154], 2.00000)+power(states[21], 2.00000)))
    algebraic[90] = constants[721]*(algebraic[81]+algebraic[86]+algebraic[89])
    algebraic[91] = (constants[159]*(states[21]-constants[160]*states[36]))/(1.00000+constants[161]*states[21]+constants[162]*states[36]+constants[163]*states[21]*states[36])
    algebraic[98] = constants[187]*(states[37]/(states[37]+constants[188]))
    algebraic[93] = (power(constants[166], constants[167]))/(power(constants[166], constants[167])+power(states[37], constants[167]))
    algebraic[95] = constants[164]*((power(states[11], 2.00000))/(power(constants[165], 2.00000)+power(states[11], 2.00000)))*algebraic[93]
    algebraic[101] = 1.00000/(1.00000+(constants[194]*constants[195])/(power(constants[194]+states[37], 2.00000)))
    algebraic[97] = (constants[170]*constants[175]+constants[172]*states[11])/(constants[175]+states[11])
    algebraic[100] = ((constants[169]+constants[173])*constants[176])/(constants[176]+states[11])
    algebraic[103] = constants[168]*(power((constants[186]*algebraic[97]*states[38])/(constants[186]*algebraic[97]+algebraic[100]), 4.00000))*(states[36]-states[11])
    algebraic[104] = (constants[171]*constants[176]+constants[174]*states[11])/(constants[176]+states[11])
    algebraic[106] = (constants[185]*states[39])/((1.00000+power(constants[181]/states[11], constants[183]))*(1.00000+power(states[11]/constants[182], constants[184])))
    algebraic[107] = ((constants[204]*constants[203])/constants[205])*log(constants[208]/states[40])
    algebraic[108] = constants[207]*(states[1]-algebraic[107])
    algebraic[116] = constants[216]*((power(states[40], constants[218]))/(power(constants[217], constants[218])+power(states[40], constants[218])))*(constants[219]-states[1])
    algebraic[111] = constants[213]*((power(constants[212], constants[210]))/(power(constants[212], constants[210])+power(states[22], constants[210])))
    algebraic[112] = algebraic[111]*(states[1]-constants[211])
    algebraic[118] = constants[727]*(algebraic[112]+algebraic[108]+algebraic[116])
    algebraic[48] = constants[693]*(states[12]-states[22])
    algebraic[99] = (constants[199]*exp(constants[200]*states[1]))/(1.00000+exp(constants[201]*(states[1]-constants[202])))
    algebraic[102] = ((constants[204]*constants[203])/(2.00000*constants[205]))*log(constants[206]/states[22])
    algebraic[105] = algebraic[99]*(states[1]-algebraic[102])
    algebraic[109] = constants[209]*((power(constants[212], constants[210]))/(power(constants[212], constants[210])+power(states[22], constants[210])))
    algebraic[110] = algebraic[109]*(states[1]-constants[211])
    algebraic[113] = constants[214]*((power(states[22], 2.00000))/(power(constants[215], 2.00000)+power(states[22], 2.00000)))
    algebraic[114] = constants[727]*(algebraic[105]+algebraic[110]+algebraic[113])
    algebraic[115] = (constants[220]*(states[22]-constants[221]*states[41]))/(1.00000+constants[222]*states[22]+constants[223]*states[41]+constants[224]*states[22]*states[41])
    algebraic[122] = constants[248]*(states[42]/(states[42]+constants[249]))
    algebraic[117] = (power(constants[227], constants[228]))/(power(constants[227], constants[228])+power(states[42], constants[228]))
    algebraic[119] = constants[225]*((power(states[12], 2.00000))/(power(constants[226], 2.00000)+power(states[12], 2.00000)))*algebraic[117]
    algebraic[125] = 1.00000/(1.00000+(constants[255]*constants[256])/(power(constants[255]+states[42], 2.00000)))
    algebraic[121] = (constants[231]*constants[236]+constants[233]*states[12])/(constants[236]+states[12])
    algebraic[124] = ((constants[230]+constants[234])*constants[237])/(constants[237]+states[12])
    algebraic[127] = constants[229]*(power((constants[247]*algebraic[121]*states[43])/(constants[247]*algebraic[121]+algebraic[124]), 4.00000))*(states[41]-states[12])
    algebraic[128] = (constants[232]*constants[237]+constants[235]*states[12])/(constants[237]+states[12])
    algebraic[130] = (constants[246]*states[44])/((1.00000+power(constants[242]/states[12], constants[244]))*(1.00000+power(states[12]/constants[243], constants[245])))
    algebraic[131] = ((constants[265]*constants[264])/constants[266])*log(constants[269]/states[45])
    algebraic[132] = constants[268]*(states[1]-algebraic[131])
    algebraic[140] = constants[277]*((power(states[45], constants[279]))/(power(constants[278], constants[279])+power(states[45], constants[279])))*(constants[280]-states[1])
    algebraic[135] = constants[274]*((power(constants[273], constants[271]))/(power(constants[273], constants[271])+power(states[23], constants[271])))
    algebraic[136] = algebraic[135]*(states[1]-constants[272])
    algebraic[142] = constants[733]*(algebraic[136]+algebraic[132]+algebraic[140])
    algebraic[49] = constants[694]*(states[13]-states[23])
    algebraic[123] = (constants[260]*exp(constants[261]*states[1]))/(1.00000+exp(constants[262]*(states[1]-constants[263])))
    algebraic[126] = ((constants[265]*constants[264])/(2.00000*constants[266]))*log(constants[267]/states[23])
    algebraic[129] = algebraic[123]*(states[1]-algebraic[126])
    algebraic[133] = constants[270]*((power(constants[273], constants[271]))/(power(constants[273], constants[271])+power(states[23], constants[271])))
    algebraic[134] = algebraic[133]*(states[1]-constants[272])
    algebraic[137] = constants[275]*((power(states[23], 2.00000))/(power(constants[276], 2.00000)+power(states[23], 2.00000)))
    algebraic[138] = constants[733]*(algebraic[129]+algebraic[134]+algebraic[137])
    algebraic[139] = (constants[281]*(states[23]-constants[282]*states[46]))/(1.00000+constants[283]*states[23]+constants[284]*states[46]+constants[285]*states[23]*states[46])
    algebraic[146] = constants[309]*(states[47]/(states[47]+constants[310]))
    algebraic[141] = (power(constants[288], constants[289]))/(power(constants[288], constants[289])+power(states[47], constants[289]))
    algebraic[143] = constants[286]*((power(states[13], 2.00000))/(power(constants[287], 2.00000)+power(states[13], 2.00000)))*algebraic[141]
    algebraic[149] = 1.00000/(1.00000+(constants[316]*constants[317])/(power(constants[316]+states[47], 2.00000)))
    algebraic[145] = (constants[292]*constants[297]+constants[294]*states[13])/(constants[297]+states[13])
    algebraic[148] = ((constants[291]+constants[295])*constants[298])/(constants[298]+states[13])
    algebraic[151] = constants[290]*(power((constants[308]*algebraic[145]*states[48])/(constants[308]*algebraic[145]+algebraic[148]), 4.00000))*(states[46]-states[13])
    algebraic[152] = (constants[293]*constants[298]+constants[296]*states[13])/(constants[298]+states[13])
    algebraic[154] = (constants[307]*states[49])/((1.00000+power(constants[303]/states[13], constants[305]))*(1.00000+power(states[13]/constants[304], constants[306])))
    algebraic[155] = ((constants[326]*constants[325])/constants[327])*log(constants[330]/states[50])
    algebraic[156] = constants[329]*(states[1]-algebraic[155])
    algebraic[164] = constants[338]*((power(states[50], constants[340]))/(power(constants[339], constants[340])+power(states[50], constants[340])))*(constants[341]-states[1])
    algebraic[159] = constants[335]*((power(constants[334], constants[332]))/(power(constants[334], constants[332])+power(states[24], constants[332])))
    algebraic[160] = algebraic[159]*(states[1]-constants[333])
    algebraic[166] = constants[739]*(algebraic[160]+algebraic[156]+algebraic[164])
    algebraic[50] = constants[695]*(states[14]-states[24])
    algebraic[147] = (constants[321]*exp(constants[322]*states[1]))/(1.00000+exp(constants[323]*(states[1]-constants[324])))
    algebraic[150] = ((constants[326]*constants[325])/(2.00000*constants[327]))*log(constants[328]/states[24])
    algebraic[153] = algebraic[147]*(states[1]-algebraic[150])
    algebraic[157] = constants[331]*((power(constants[334], constants[332]))/(power(constants[334], constants[332])+power(states[24], constants[332])))
    algebraic[158] = algebraic[157]*(states[1]-constants[333])
    algebraic[161] = constants[336]*((power(states[24], 2.00000))/(power(constants[337], 2.00000)+power(states[24], 2.00000)))
    algebraic[162] = constants[739]*(algebraic[153]+algebraic[158]+algebraic[161])
    algebraic[163] = (constants[342]*(states[24]-constants[343]*states[51]))/(1.00000+constants[344]*states[24]+constants[345]*states[51]+constants[346]*states[24]*states[51])
    algebraic[170] = constants[370]*(states[52]/(states[52]+constants[371]))
    algebraic[165] = (power(constants[349], constants[350]))/(power(constants[349], constants[350])+power(states[52], constants[350]))
    algebraic[167] = constants[347]*((power(states[14], 2.00000))/(power(constants[348], 2.00000)+power(states[14], 2.00000)))*algebraic[165]
    algebraic[173] = 1.00000/(1.00000+(constants[377]*constants[378])/(power(constants[377]+states[52], 2.00000)))
    algebraic[169] = (constants[353]*constants[358]+constants[355]*states[14])/(constants[358]+states[14])
    algebraic[172] = ((constants[352]+constants[356])*constants[359])/(constants[359]+states[14])
    algebraic[175] = constants[351]*(power((constants[369]*algebraic[169]*states[53])/(constants[369]*algebraic[169]+algebraic[172]), 4.00000))*(states[51]-states[14])
    algebraic[176] = (constants[354]*constants[359]+constants[357]*states[14])/(constants[359]+states[14])
    algebraic[178] = (constants[368]*states[54])/((1.00000+power(constants[364]/states[14], constants[366]))*(1.00000+power(states[14]/constants[365], constants[367])))
    algebraic[179] = ((constants[387]*constants[386])/constants[388])*log(constants[391]/states[55])
    algebraic[180] = constants[390]*(states[1]-algebraic[179])
    algebraic[188] = constants[399]*((power(states[55], constants[401]))/(power(constants[400], constants[401])+power(states[55], constants[401])))*(constants[402]-states[1])
    algebraic[183] = constants[396]*((power(constants[395], constants[393]))/(power(constants[395], constants[393])+power(states[25], constants[393])))
    algebraic[184] = algebraic[183]*(states[1]-constants[394])
    algebraic[190] = constants[745]*(algebraic[184]+algebraic[180]+algebraic[188])
    algebraic[51] = constants[696]*(states[15]-states[25])
    algebraic[171] = (constants[382]*exp(constants[383]*states[1]))/(1.00000+exp(constants[384]*(states[1]-constants[385])))
    algebraic[174] = ((constants[387]*constants[386])/(2.00000*constants[388]))*log(constants[389]/states[25])
    algebraic[177] = algebraic[171]*(states[1]-algebraic[174])
    algebraic[181] = constants[392]*((power(constants[395], constants[393]))/(power(constants[395], constants[393])+power(states[25], constants[393])))
    algebraic[182] = algebraic[181]*(states[1]-constants[394])
    algebraic[185] = constants[397]*((power(states[25], 2.00000))/(power(constants[398], 2.00000)+power(states[25], 2.00000)))
    algebraic[186] = constants[745]*(algebraic[177]+algebraic[182]+algebraic[185])
    algebraic[187] = (constants[403]*(states[25]-constants[404]*states[56]))/(1.00000+constants[405]*states[25]+constants[406]*states[56]+constants[407]*states[25]*states[56])
    algebraic[194] = constants[431]*(states[57]/(states[57]+constants[432]))
    algebraic[189] = (power(constants[410], constants[411]))/(power(constants[410], constants[411])+power(states[57], constants[411]))
    algebraic[191] = constants[408]*((power(states[15], 2.00000))/(power(constants[409], 2.00000)+power(states[15], 2.00000)))*algebraic[189]
    algebraic[197] = 1.00000/(1.00000+(constants[438]*constants[439])/(power(constants[438]+states[57], 2.00000)))
    algebraic[193] = (constants[414]*constants[419]+constants[416]*states[15])/(constants[419]+states[15])
    algebraic[196] = ((constants[413]+constants[417])*constants[420])/(constants[420]+states[15])
    algebraic[199] = constants[412]*(power((constants[430]*algebraic[193]*states[58])/(constants[430]*algebraic[193]+algebraic[196]), 4.00000))*(states[56]-states[15])
    algebraic[200] = (constants[415]*constants[420]+constants[418]*states[15])/(constants[420]+states[15])
    algebraic[202] = (constants[429]*states[59])/((1.00000+power(constants[425]/states[15], constants[427]))*(1.00000+power(states[15]/constants[426], constants[428])))
    algebraic[203] = ((constants[448]*constants[447])/constants[449])*log(constants[452]/states[60])
    algebraic[204] = constants[451]*(states[1]-algebraic[203])
    algebraic[212] = constants[460]*((power(states[60], constants[462]))/(power(constants[461], constants[462])+power(states[60], constants[462])))*(constants[463]-states[1])
    algebraic[207] = constants[457]*((power(constants[456], constants[454]))/(power(constants[456], constants[454])+power(states[26], constants[454])))
    algebraic[208] = algebraic[207]*(states[1]-constants[455])
    algebraic[214] = constants[751]*(algebraic[208]+algebraic[204]+algebraic[212])
    algebraic[52] = constants[697]*(states[16]-states[26])
    algebraic[195] = (constants[443]*exp(constants[444]*states[1]))/(1.00000+exp(constants[445]*(states[1]-constants[446])))
    algebraic[198] = ((constants[448]*constants[447])/(2.00000*constants[449]))*log(constants[450]/states[26])
    algebraic[201] = algebraic[195]*(states[1]-algebraic[198])
    algebraic[205] = constants[453]*((power(constants[456], constants[454]))/(power(constants[456], constants[454])+power(states[26], constants[454])))
    algebraic[206] = algebraic[205]*(states[1]-constants[455])
    algebraic[209] = constants[458]*((power(states[26], 2.00000))/(power(constants[459], 2.00000)+power(states[26], 2.00000)))
    algebraic[210] = constants[751]*(algebraic[201]+algebraic[206]+algebraic[209])
    algebraic[211] = (constants[464]*(states[26]-constants[465]*states[61]))/(1.00000+constants[466]*states[26]+constants[467]*states[61]+constants[468]*states[26]*states[61])
    algebraic[218] = constants[492]*(states[62]/(states[62]+constants[493]))
    algebraic[213] = (power(constants[471], constants[472]))/(power(constants[471], constants[472])+power(states[62], constants[472]))
    algebraic[215] = constants[469]*((power(states[16], 2.00000))/(power(constants[470], 2.00000)+power(states[16], 2.00000)))*algebraic[213]
    algebraic[221] = 1.00000/(1.00000+(constants[499]*constants[500])/(power(constants[499]+states[62], 2.00000)))
    algebraic[217] = (constants[475]*constants[480]+constants[477]*states[16])/(constants[480]+states[16])
    algebraic[220] = ((constants[474]+constants[478])*constants[481])/(constants[481]+states[16])
    algebraic[223] = constants[473]*(power((constants[491]*algebraic[217]*states[63])/(constants[491]*algebraic[217]+algebraic[220]), 4.00000))*(states[61]-states[16])
    algebraic[224] = (constants[476]*constants[481]+constants[479]*states[16])/(constants[481]+states[16])
    algebraic[226] = (constants[490]*states[64])/((1.00000+power(constants[486]/states[16], constants[488]))*(1.00000+power(states[16]/constants[487], constants[489])))
    algebraic[227] = ((constants[509]*constants[508])/constants[510])*log(constants[513]/states[65])
    algebraic[228] = constants[512]*(states[1]-algebraic[227])
    algebraic[236] = constants[521]*((power(states[65], constants[523]))/(power(constants[522], constants[523])+power(states[65], constants[523])))*(constants[524]-states[1])
    algebraic[231] = constants[518]*((power(constants[517], constants[515]))/(power(constants[517], constants[515])+power(states[27], constants[515])))
    algebraic[232] = algebraic[231]*(states[1]-constants[516])
    algebraic[238] = constants[757]*(algebraic[232]+algebraic[228]+algebraic[236])
    algebraic[53] = constants[698]*(states[17]-states[27])
    algebraic[219] = (constants[504]*exp(constants[505]*states[1]))/(1.00000+exp(constants[506]*(states[1]-constants[507])))
    algebraic[222] = ((constants[509]*constants[508])/(2.00000*constants[510]))*log(constants[511]/states[27])
    algebraic[225] = algebraic[219]*(states[1]-algebraic[222])
    algebraic[229] = constants[514]*((power(constants[517], constants[515]))/(power(constants[517], constants[515])+power(states[27], constants[515])))
    algebraic[230] = algebraic[229]*(states[1]-constants[516])
    algebraic[233] = constants[519]*((power(states[27], 2.00000))/(power(constants[520], 2.00000)+power(states[27], 2.00000)))
    algebraic[234] = constants[757]*(algebraic[225]+algebraic[230]+algebraic[233])
    algebraic[235] = (constants[525]*(states[27]-constants[526]*states[66]))/(1.00000+constants[527]*states[27]+constants[528]*states[66]+constants[529]*states[27]*states[66])
    algebraic[242] = constants[553]*(states[67]/(states[67]+constants[554]))
    algebraic[237] = (power(constants[532], constants[533]))/(power(constants[532], constants[533])+power(states[67], constants[533]))
    algebraic[239] = constants[530]*((power(states[17], 2.00000))/(power(constants[531], 2.00000)+power(states[17], 2.00000)))*algebraic[237]
    algebraic[245] = 1.00000/(1.00000+(constants[560]*constants[561])/(power(constants[560]+states[67], 2.00000)))
    algebraic[241] = (constants[536]*constants[541]+constants[538]*states[17])/(constants[541]+states[17])
    algebraic[244] = ((constants[535]+constants[539])*constants[542])/(constants[542]+states[17])
    algebraic[247] = constants[534]*(power((constants[552]*algebraic[241]*states[68])/(constants[552]*algebraic[241]+algebraic[244]), 4.00000))*(states[66]-states[17])
    algebraic[248] = (constants[537]*constants[542]+constants[540]*states[17])/(constants[542]+states[17])
    algebraic[250] = (constants[551]*states[69])/((1.00000+power(constants[547]/states[17], constants[549]))*(1.00000+power(states[17]/constants[548], constants[550])))
    algebraic[251] = ((constants[570]*constants[569])/constants[571])*log(constants[574]/states[70])
    algebraic[252] = constants[573]*(states[1]-algebraic[251])
    algebraic[260] = constants[582]*((power(states[70], constants[584]))/(power(constants[583], constants[584])+power(states[70], constants[584])))*(constants[585]-states[1])
    algebraic[255] = constants[579]*((power(constants[578], constants[576]))/(power(constants[578], constants[576])+power(states[28], constants[576])))
    algebraic[256] = algebraic[255]*(states[1]-constants[577])
    algebraic[262] = constants[763]*(algebraic[256]+algebraic[252]+algebraic[260])
    algebraic[54] = constants[699]*(states[18]-states[28])
    algebraic[243] = (constants[565]*exp(constants[566]*states[1]))/(1.00000+exp(constants[567]*(states[1]-constants[568])))
    algebraic[246] = ((constants[570]*constants[569])/(2.00000*constants[571]))*log(constants[572]/states[28])
    algebraic[249] = algebraic[243]*(states[1]-algebraic[246])
    algebraic[253] = constants[575]*((power(constants[578], constants[576]))/(power(constants[578], constants[576])+power(states[28], constants[576])))
    algebraic[254] = algebraic[253]*(states[1]-constants[577])
    algebraic[257] = constants[580]*((power(states[28], 2.00000))/(power(constants[581], 2.00000)+power(states[28], 2.00000)))
    algebraic[258] = constants[763]*(algebraic[249]+algebraic[254]+algebraic[257])
    algebraic[259] = (constants[586]*(states[28]-constants[587]*states[71]))/(1.00000+constants[588]*states[28]+constants[589]*states[71]+constants[590]*states[28]*states[71])
    algebraic[266] = constants[614]*(states[72]/(states[72]+constants[615]))
    algebraic[261] = (power(constants[593], constants[594]))/(power(constants[593], constants[594])+power(states[72], constants[594]))
    algebraic[263] = constants[591]*((power(states[18], 2.00000))/(power(constants[592], 2.00000)+power(states[18], 2.00000)))*algebraic[261]
    algebraic[269] = 1.00000/(1.00000+(constants[621]*constants[622])/(power(constants[621]+states[72], 2.00000)))
    algebraic[265] = (constants[597]*constants[602]+constants[599]*states[18])/(constants[602]+states[18])
    algebraic[268] = ((constants[596]+constants[600])*constants[603])/(constants[603]+states[18])
    algebraic[271] = constants[595]*(power((constants[613]*algebraic[265]*states[73])/(constants[613]*algebraic[265]+algebraic[268]), 4.00000))*(states[71]-states[18])
    algebraic[272] = (constants[598]*constants[603]+constants[601]*states[18])/(constants[603]+states[18])
    algebraic[274] = (constants[612]*states[74])/((1.00000+power(constants[608]/states[18], constants[610]))*(1.00000+power(states[18]/constants[609], constants[611])))
    algebraic[275] = ((constants[631]*constants[630])/constants[632])*log(constants[635]/states[75])
    algebraic[276] = constants[634]*(states[1]-algebraic[275])
    algebraic[283] = constants[643]*((power(states[75], constants[645]))/(power(constants[644], constants[645])+power(states[75], constants[645])))*(constants[646]-states[1])
    algebraic[279] = constants[640]*((power(constants[639], constants[637]))/(power(constants[639], constants[637])+power(states[29], constants[637])))
    algebraic[280] = algebraic[279]*(states[1]-constants[638])
    algebraic[285] = constants[769]*(algebraic[280]+algebraic[276]+algebraic[283])
    algebraic[29] = constants[15]*states[5]*states[6]*(states[1]-constants[688])
    algebraic[30] = constants[27]*states[7]*(states[1]-constants[688])
    algebraic[31] = constants[32]*(states[1]-constants[688])
    algebraic[32] = constants[33]*states[8]*states[9]*(states[1]-constants[689])
    algebraic[33] = constants[48]*(states[1]-constants[49])
    algebraic[34] = algebraic[7]+algebraic[25]+algebraic[29]+algebraic[30]+algebraic[31]+algebraic[32]+algebraic[33]
    algebraic[72] = algebraic[66]+algebraic[70]
    algebraic[96] = algebraic[90]+algebraic[94]
    algebraic[120] = algebraic[114]+algebraic[118]
    algebraic[144] = algebraic[138]+algebraic[142]
    algebraic[168] = algebraic[162]+algebraic[166]
    algebraic[192] = algebraic[186]+algebraic[190]
    algebraic[216] = algebraic[210]+algebraic[214]
    algebraic[240] = algebraic[234]+algebraic[238]
    algebraic[264] = algebraic[258]+algebraic[262]
    algebraic[267] = (constants[626]*exp(constants[627]*states[1]))/(1.00000+exp(constants[628]*(states[1]-constants[629])))
    algebraic[270] = ((constants[631]*constants[630])/(2.00000*constants[632]))*log(constants[633]/states[29])
    algebraic[273] = algebraic[267]*(states[1]-algebraic[270])
    algebraic[277] = constants[636]*((power(constants[639], constants[637]))/(power(constants[639], constants[637])+power(states[29], constants[637])))
    algebraic[278] = algebraic[277]*(states[1]-constants[638])
    algebraic[281] = constants[641]*((power(states[29], 2.00000))/(power(constants[642], 2.00000)+power(states[29], 2.00000)))
    algebraic[282] = constants[769]*(algebraic[273]+algebraic[278]+algebraic[281])
    algebraic[287] = algebraic[282]+algebraic[285]
    algebraic[55] = constants[700]*(states[19]-states[29])
    algebraic[284] = (constants[647]*(states[29]-constants[648]*states[76]))/(1.00000+constants[649]*states[29]+constants[650]*states[76]+constants[651]*states[29]*states[76])
    algebraic[290] = constants[675]*(states[77]/(states[77]+constants[676]))
    algebraic[286] = (power(constants[654], constants[655]))/(power(constants[654], constants[655])+power(states[77], constants[655]))
    algebraic[288] = constants[652]*((power(states[19], 2.00000))/(power(constants[653], 2.00000)+power(states[19], 2.00000)))*algebraic[286]
    algebraic[292] = 1.00000/(1.00000+(constants[682]*constants[683])/(power(constants[682]+states[77], 2.00000)))
    algebraic[289] = (constants[658]*constants[663]+constants[660]*states[19])/(constants[663]+states[19])
    algebraic[291] = ((constants[657]+constants[661])*constants[664])/(constants[664]+states[19])
    algebraic[293] = constants[656]*(power((constants[674]*algebraic[289]*states[78])/(constants[674]*algebraic[289]+algebraic[291]), 4.00000))*(states[76]-states[19])
    algebraic[294] = (constants[659]*constants[664]+constants[662]*states[19])/(constants[664]+states[19])
    algebraic[295] = (constants[673]*states[79])/((1.00000+power(constants[669]/states[19], constants[671]))*(1.00000+power(states[19]/constants[670], constants[672])))
    algebraic[8] = ((constants[52]*constants[51])/(2.00000*constants[53]))*log(constants[54]/states[4])
    return algebraic

def solve_model():
    """Solve model with ODE solver"""
    from scipy.integrate import ode
    # Initialise constants and state variables
    (init_states, constants) = initConsts()

    # Set timespan to solve over
    voi = linspace(0, 10, 500)

    # Construct ODE object to solve
    r = ode(computeRates)
    r.set_integrator('vode', method='bdf', atol=1e-06, rtol=1e-06, max_step=1)
    r.set_initial_value(init_states, voi[0])
    r.set_f_params(constants)

    # Solve model
    states = array([[0.0] * len(voi)] * sizeStates)
    states[:,0] = init_states
    for (i,t) in enumerate(voi[1:]):
        if r.successful():
            r.integrate(t)
            states[:,i+1] = r.y
        else:
            break

    # Compute algebraic variables
    algebraic = computeAlgebraic(constants, states, voi)
    return (voi, states, algebraic)

def plot_model(voi, states, algebraic):
    """Plot variables against variable of integration"""
    import pylab
    (legend_states, legend_algebraic, legend_voi, legend_constants) = createLegends()
    pylab.figure(1)
    pylab.plot(voi,vstack((states,algebraic)).T)
    pylab.xlabel(legend_voi)
    pylab.legend(legend_states + legend_algebraic, loc='best')
    pylab.show()

if __name__ == "__main__":
    (voi, states, algebraic) = solve_model()
    plot_model(voi, states, algebraic)